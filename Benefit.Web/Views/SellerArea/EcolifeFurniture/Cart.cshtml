@using Benefit.Common.Constants
@using Benefit.Common.Helpers
@using Benefit.Domain.Models
@model Benefit.DataTransfer.ViewModels.CompleteOrderViewModel
@using Benefit.DataTransfer.ViewModels
@using Benefit.Domain.Models
@using Benefit.Services

@{
    Layout = "_SellerLayout.cshtml";
    var seller = ViewBag.Seller as Seller;
    ViewBag.Title = "Кошик";
    var defaultAddress = Model.Addresses.FirstOrDefault(entry => entry.IsDefault) ?? Model.Addresses.FirstOrDefault();
    var defaultAddressId = defaultAddress == null ? "" : defaultAddress.Id;
}
@section meta
{
    <meta name="description" content="Кошик @seller.SeoSuffix">
}
@section styles
{
    <link href="~/Content/css/select2.min.css" rel="stylesheet" />
    <link href="~/Content/css/font-awesome.min.css" rel="stylesheet" />
}
@section scripts
{
    <script src="~/Scripts/jquery.mask.min.js"></script>
    <script src="~/Scripts/common.js"></script>
    <script src="~/Scripts/jquery.autocomplete.min.js"></script>
    <script src="~/Scripts/address.js"></script>
    <script src="~/Scripts/select2.min.js" defer></script>

    <script>
        var token = $('[name=__RequestVerificationToken]').val();
        var isAuthenticated = ('@User.Identity.IsAuthenticated' === 'True');
        var loginUrl = '@Url.Action("Login", "Account")' + '?returnUrl=@HttpUtility.UrlEncode(Url.Action("Order", "Cart"))&isAjaxRequest=true';
        var npCitiesRequestData = {
            'modelName': 'Address',
            "calledMethod": "getCities",
            "methodProperties": {
                "FindByString": ""
            },
            "apiKey": "@SettingsService.NovaPoshta.ApiKey"
        };
        var npWarehousesRequestData = {
            "modelName": "Address",
            "calledMethod": "getWarehouses",
            "methodProperties": {
                "CityRef": "[cityref]"
            }
        };

        $(function () {
            SetRegionsAutocomplete();
            $("input[name=ShippingMethodId]").change(function () {
                $(".shipping-method").hide();
                var shippingType = $(this).attr("data-shipping-type");
                var shippinWrap = $(".shipping-method[data-shipping-type=" + shippingType + "]");
                if (shippinWrap.length > 0) {
                    shippinWrap.show();
                } else {
                    $("#shippingAddresses").show();
                }
            });
            if ($(".nova-poshta").length > 0) {
                var majorCities;
                var searchFlag = true;;
                $.post('@SettingsService.NovaPoshta.ApiUrl',
                    JSON.stringify(npCitiesRequestData),
                    function (res) {
                        res.data = res.data.filter(function (entry) { return parseInt(entry.CityID) < 30 });
                        majorCities = $.map(res.data, function (obj) {
                            return { id: obj.Ref, text: obj.Description };
                        });
                    });

                $("#npCity").select2({
                    placeholder: "Оберіть місто",
                    ajax: {
                        url: '@SettingsService.NovaPoshta.ApiUrl',
                        method: "POST",
                        data: function (params) {
                            if (typeof params.term !== 'undefined' && params.term.length >= 3) {
                                npCitiesRequestData.methodProperties.FindByString = params.term;
                                searchFlag = true;
                                return JSON.stringify(npCitiesRequestData);
                            }
                            else {
                                searchFlag = false;
                            }
                        },
                        processResults: function (data) {
                            var res;
                            if (searchFlag) {
                                res = $.map(data.data, function (obj) {
                                    return { id: obj.Ref, text: obj.Description };
                                });
                            }
                            else {
                                res = majorCities;
                            }
                            return {
                                results: res
                            }
                        }
                    }
                }).on('select2:select',
                    function (e) {
                        var data = e.params.data;
                        $('#npWarehouse').children('option').remove();
                        //fetch warehouses
                        var strWarehouseData =
                            JSON.stringify(npWarehousesRequestData).replace("[cityref]", data.id);
                        $.post('@SettingsService.NovaPoshta.ApiUrl',
                            strWarehouseData,
                            function (warRes) {
                                warRes = JSON.parse(warRes);
                                $.each(warRes.data,
                                    function (index, warValue) {
                                        $("#npWarehouse").append($("<option></option>")
                                            .attr("value", warValue.Ref)
                                            .text(warValue.Description));
                                    });
                                $("#npWarehouse").select2({
                                    placeholder: "Оберіть відділення",
                                });
                            });
                    });
            }

            $(".delivery_address_item").click(function () {
                var addressId = $(this).attr("data-address-id");
                $("#AddressId").val(addressId);
                $(".delivery_address_item").removeClass("active");
                $(".delivery_address_item").hide();
                $(this).addClass("active");
                $(this).show();
            });
            $(".chose_new_address").click(function (e) {
                e.preventDefault();
                $(".delivery_address_item").show();
            });

            $("#save-order").click(function () {
                debugger;
                var btn = $(this);
                if (btn.data("validation") == false) {
                    flashMessage("Будь ласка заповніть всі поля", 0);
                    $('html,body').animate({ scrollTop: 0 }, 'fast');
                    return;
                }
                btn.find(".btn").attr("disabled", "disabled");
                showLoader();
                var shippingMethod = $("input[name=ShippingMethodId]:checked");
                var shippingMethodType = shippingMethod.attr("data-shipping-type");
                var address = "";
                if (shippingMethodType == @((int) DefinedShippingType.NovaPoshta)) {
                    address = shippingMethod.parent().text() +
                        " " +
                        $("#npCity option:selected").text() +
                        " " +
                        $("#npWarehouse option:selected").text();
                }
                if (shippingMethodType == @((int) DefinedShippingType.Self)) {
                    address = "@Enumerations.GetDisplayNameValue(DefinedShippingType.Self)";
                }
                $("#shippingAddress").val(address);
                if (!isAuthenticated) {
                    var registerForm = $("#register-form");
                    var registerFormJson = getFormData(registerForm);
                    $.post(registerForm.attr("action"),
                        {
                            "__RequestVerificationToken": token,
                            "model": registerFormJson
                        },
                        function (data) {
                            if (data.error) {
                                flashMessage(data.error, true, true);
                            } else {
                                $("#UserId").val(data.userId);
                                $("#AddressId").val(data.shippingAddressId);
                                $("#order-form-wrap form").submit();
                            }
                            $('html,body').animate({ scrollTop: 0 }, 'fast');
                            btn.find(".btn").removeAttr("disabled");
                            hideLoader();
                        });
                }
                else {
                    $("#order-form-wrap form").submit();
                }
            });

            $(".btn-ajax-login").click(function() {
                var username = $("#UserName").val();
                var password = $("#UserPassword").val();

                $.post(loginUrl,
                    {
                        "__RequestVerificationToken": token,
                        "model": {
                            "UserName": username,
                            "Password": password
                        }
                    },
                    function(data) {
                        if (data.error) {
                            flashMessage(data.error, true, true);
                        } else {
                            location.href = data.returnUrl;
                        }
                    });
            });
        });
    </script>
}
@Html.AntiForgeryToken()

<div class="container">
    <div class="col-sm-12 col-md-8 col-xl-9" style="margin: 0 auto;" data-seller-id="@Model.SellerId" data-seller-userdiscount="@(Model.Order == null ? string.Empty : Model.Order.SellerUserDiscount.ToString())">
        <div class="fn_ajax_content">

            @Html.Partial("_FlashMessage")

            @if (Model.Order == null || Model.Order != null && !Model.Order.OrderProducts.Any())
            {
                <div class="block">
                    <div class="padding">
                        Кошик порожній
                    </div>
                </div>
            }
            else
            {
                if (!User.Identity.IsAuthenticated)
                {
                    <div class="login-register-wrapper">
                        <div class="login-register-tab-list nav" style="margin-bottom: 10px; margin-top:15px;">
                            <a class="active" data-toggle="tab" href="#lg1">
                                <h4>Постійний клієнт</h4>
                            </a>
                            <a data-toggle="tab" href="#lg2">
                                <h4>Новий клієнт</h4>
                            </a>
                        </div>
                        @Html.ValidationSummary()
                        <div class="tab-content">
                            <div id="lg1" class="tab-pane active">
                                <div class="login-form-container" style="padding-bottom: 30px;">
                                    <div class="login-register-form">

                                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "enter_left", role = "form" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            @Html.ValidationMessage("UserName")
                                            @Html.TextBox("UserName", null, new { @class = "form_input", type = "email", placeholder = "Логін" })
                                            @Html.ValidationMessage("Password")
                                            @Html.Password("Password", null, new { @class = "form_input", placeholder = "Пароль" })
                                            <div class="button-box d-flex justify-content-between">
                                                <button class="button btn-ajax-login" name="login" data-language="login_sign_in" type="submit">Увійти</button>
                                                <div class="login-toggle-btn">
                                                    <a href="@Url.Action("forgotpassword","account")">Забули пароль?</a>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div id="lg2" class="tab-pane">
                                <div class="login-form-container">
                                    <div class="login-register-form">
                                        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "enter_left", role = "form" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <div class="row">
                                                <div class="form_group col-sm-6">
                                                    @Html.TextBox("FullName", null, new { @class = "form_input", placeholder = "Ім'я та прізвище*" })
                                                    @Html.ValidationMessage("FullName")
                                                </div>
                                                <div class="form_group col-sm-6">
                                                    @Html.TextBox("PhoneNumber", null, new { @class = "form_input phone-input", placeholder = "Номер телефону *", type = "tel" })
                                                    @Html.ValidationMessage("PhoneNumber")
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form_group col-sm-6">
                                                    @Html.TextBox("Email", null, new { @class = "form_input", placeholder = "Email *", type = "email" })
                                                    @Html.ValidationMessage("Email")
                                                </div>
                                                <div class="form_group col-sm-6">
                                                    @{
                                                        var regionNameCookie = Request.Cookies[RouteConstants.RegionNameCookieName];
                                                        var regionNameCookieVal = regionNameCookie == null ? null : HttpUtility.UrlDecode(regionNameCookie.Value);
                                                        var regionIdCookie = Request.Cookies[RouteConstants.RegionIdCookieName];
                                                        var regionIdCookieVal = regionIdCookie == null ? null : HttpUtility.UrlDecode(regionIdCookie.Value);
                                                    }
                                                    @Html.TextBox("RegionName", regionNameCookieVal, new { @class = "form_input regionSearch", placeholder = "Місто *" })
                                                    @Html.Hidden("RegionId", regionIdCookieVal)
                                                    @Html.ValidationMessage("RegionId")
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form_group col-sm-6">
                                                    @Html.TextBox("Password", null, new { @class = "form_input", placeholder = "Пароль *", type = "password" })
                                                    @Html.ValidationMessage("Password")
                                                </div>
                                                <div class="form_group col-sm-6">
                                                    @Html.TextBox("CardNumber", null, new { @class = "form_input", placeholder = "Номер картки (за наявності)" })
                                                    @Html.ValidationMessage("CardNumber")
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form_group col-sm-6">
                                                    @Html.TextBox("ReferalNumber", null, new { @class = "form_input", placeholder = "Реєстраційний код (за наявності)" })
                                                    @Html.ValidationMessage("ReferalNumber")
                                                </div>
                                            </div>
                                            <div class="button-box">
                                                <button class="button btn-ajax-login" name="register" data-language="login_sign_in" type="submit">Реєстрація</button>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <div id="order-form-wrap">
                    <form action="@Url.Action("order", "cart", new {id = Model.SellerId})" method="post">
                        <input type="hidden" name="SellerId" value="@Model.SellerId" />
                        @Html.Hidden("UserId")
                        @Html.Hidden("AddressId", defaultAddressId)

                        <div class="block mt-3">
                            <div class="container">
                                <div class="row">
                                    <div class="col-md-12 text-center">
                                        <div class="section-title underline-shape">
                                            <h2>Кошик</h2>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="mini-cart-content cart-visible order-wrap" data-seller-id="@Model.SellerId" data-seller-userdiscount="@(Model.Order == null ? string.Empty : Model.Order.SellerUserDiscount.ToString())">
                                <ul>
                                    @foreach (var product in Model.Order.OrderProducts)
                                    {
                                        var productUrl = Url.RouteUrl(RouteConstants.ProductRouteName, new { productUrl = string.Format("{0}-{1}", product.ProductUrlName, product.ProductSku) });
                                        var hasWholesale = product.WholesaleProductPrice.HasValue && product.WholesaleFrom.HasValue;
                                        var showWholesale = hasWholesale && product.Amount >= product.WholesaleFrom.Value;
                                        var productOptionsSum = product.OrderProductOptions.Sum(entry => entry.ProductOptionPriceGrowth * entry.Amount);
                                        var oldProductSum = product.ProductPrice * product.Amount;
                                        var actualProductSum = (showWholesale ? product.WholesaleProductPrice.Value : product.ProductPrice) * product.Amount;
                                        <li class="single-shopping-cart basket_modal_table_row product purchase_tr" data-product-id="@product.ProductId" data-seller-id="@product.SellerId" data-original-price="@product.ProductPrice" data-available-amount="@product.AvailableAmount" data-wholesale-price="@product.WholesaleProductPrice.GetValueOrDefault(product.ProductPrice)" data-wholesale-from="@product.WholesaleFrom.GetValueOrDefault(0)">
                                            <div class="shopping-cart-img">
                                                <a href="@productUrl">
                                                    @if (product.ProductImageUrl != null)
                                                    {
                                                        if (product.ProductImageUrl.Contains("http"))
                                                        {
                                                            <img src="@product.ProductImageUrl">
                                                        }
                                                        else
                                                        {
                                                            <img src="~/Images/ProductGallery/@product.ProductId/@product.ProductImageUrl">
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <img src="~/Images/ProductGallery/default_product_thumbnail.png">
                                                    }
                                            </div>
                                            <div class="shopping-cart-title">
                                                <h4><a href="@productUrl">@product.ProductName</a></h4>
                                                <span class="actual-product-price">@((showWholesale ? product.WholesaleProductPrice.Value : product.ProductPrice).ToString("F")) грн</span>
                                                <div class="purchase_amount basket_modal">
                                                    <div class="fn_is_preorder amount" data-weight-product="@product.IsWeightProduct">
                                                        <input class="input_amount quantity" value="@product.Amount" data-max="50" type="text">
                                                        <span class="plus"></span>
                                                        <span class="minus"></span>
                                                    </div>
                                                </div>
                                                <div class="shopping-cart-delete delete_product" data-product-id="@product.ProductId">
                                                    <a href="#"><i class="ion-android-cancel"></i></a>
                                                </div>
                                            </div>
                                            <div style="width: 10%; position: absolute; right: 25px; top: 100px; color: #ef1e1e;">
                                                <del class="old-product-total" style="display: @(showWholesale ? "" : "none")">
                                                    @((oldProductSum + productOptionsSum).ToString("F"))
                                                </del>
                                                <span class="actual-product-total">
                                                    @((actualProductSum + productOptionsSum).ToString("F"))
                                                </span>
                                                грн
                                            </div>
                                        </li>
                                    }
                                </ul>
                                <div class="shopping-cart-total">
                                    @{
                                        var bonuses = Model.Order.OrderProducts.Sum(entry => entry.BonusesAcquired * entry.Amount);
                                    }
                                    <h4>
                                        Кешбек :
                                        <span>
                                            <span class="basket_modal_bonus">
                                                <span>
                                                    @(bonuses.ToString("F"))
                                                </span>
                                            </span>
                                            <span> грн</span>
                                        </span>
                                    </h4>
                                    <h4 class="shop-total">
                                        Всього :
                                        <span>
                                            <span class="basket_modal_price">
                                                <span>
                                                    @Model.Order.GetOrderSum().ToString("F")
                                                </span>
                                            </span>
                                            <span> грн</span>
                                        </span>
                                    </h4>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 text-center">
                                        <div class="section-title underline-shape">
                                            <h2>Способи доставки</h2>
                                        </div>
                                    </div>
                                </div>
                                <div class="block">
                                    <div class="delivery">
                                        @Html.Partial("~/Views/SellerArea/EcolifeFurniture/_ShippingMethods.cshtml", Model)
                                        <div class="card shipping-method" data-shipping-type="3" style="display: none;" id="shippingAddresses">
                                            <ul class="nav nav-tabs" role="tablist">
                                                <li role="presentation" class="active"><a href="#delivery" aria-controls="home" role="tab" data-toggle="tab">Адреса доставки</a></li>
                                            </ul>

                                            <div class="tab-content">
                                                <div role="tabpanel" class="tab-pane active" id="delivery">
                                                    <div class="row">
                                                        @Html.Partial("_ShippingAddresses", Model)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row mt-5">
                                    <div class="col-md-12 text-center">
                                        <div class="section-title underline-shape">
                                            <h2>Методи оплати</h2>
                                        </div>
                                    </div>
                                </div>
                                <div class="fn_delivery_payment block" id="fn_delivery_payment_1">
                                    <div class="delivery">
                                        @foreach (var payment in Model.PaymentTypes)
                                        {
                                            <div class="delivery_item">
                                                <input class="input_delivery" type="radio" id="@payment.ToString()" name="PaymentType" value="@payment.ToString()">
                                                <label class="delivery_label active" for="@payment.ToString()">
                                                    <span class="delivery_name">
                                                        @Enumerations.GetEnumDescription(payment)
                                                    </span>
                                                </label>
                                                @if (payment == PaymentType.Bonuses)
                                                {
                                                    <a href="@Url.RouteUrl("pagesRoute", new {id = "faq"})#vukorustatu_bonysu" target="_blank">
                                                        <span class="label label-info label-as-badge" style="font-size: 1em; display: inline-block;">
                                                            <strong>?</strong>
                                                        </span>
                                                    </a>
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 text-center">
                                        <div class="section-title underline-shape">
                                            <h2>Коментар</h2>
                                        </div>
                                    </div>
                                </div>
                                <div class="billing-info-wrap">
                                    <div class="additional-info-wrap" style="margin: 0 0 15px 0;">
                                        <div class="additional-info">
                                            <textarea placeholder="Коментар до замовлення" name="comment"></textarea>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>

                        <div id="fn_ajax_deliveries">

                        </div>
                    </form>
                    <div class="shopping-cart-btn text-center mt-3">
                        <button id="save-order" class="default-btn button width-100" name="checkout" data-language="cart_checkout" style="margin-bottom: 10px;">Оформити замовлення</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
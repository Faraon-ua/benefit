@model Benefit.DataTransfer.ViewModels.CompleteOrderViewModel
@using Benefit.Common.Constants
<div class="delivery_address">
    @{
        var defaultAddress = Model.Addresses.FirstOrDefault(entry => entry.IsDefault);
        defaultAddress = defaultAddress ?? Model.Addresses.FirstOrDefault();
        var defaultAddressId = defaultAddress == null ? "" : defaultAddress.Id;
    }
    @foreach (var address in Model.Addresses)
    {
        var className = (address.Id == defaultAddressId) ? "active" : "";
        <div class="delivery_address_item @className" @(className != "active" ? "style=display:none;" : "") data-address-id="@address.Id">
            <p class="adress_name">@address.FullName</p>
            <p class="adress_main">@(address.Region.Name_ua + ", " + address.AddressLine)</p>
            <p class="adress_phone">@address.Phone</p>
        </div>
    }
    @if (!Model.Addresses.Any())
    {
        <div class="row" style="margin: 3px;">
            <div class="col-sm-12">
                <label>Вулиця, номер будинку і квартири</label>
                <br />
                @Html.TextBox("NewAddressLine", null, new { @class = "width-50" })
                @Html.Hidden("UserId")
            </div>
        </div>
    }
    else
    {
        <div class="clearfix"></div>
        <div class="address_choice_wrap">
            <a href="#" class="chose_new_address">+ Обрати іншу адресу</a>
            <a href="@Url.Action("useraddress", "panel", new {area = DomainConstants.CabinetAreaName, returnUrl = Request.Url.AbsolutePath })" class="add_new_address margin-left-10">+ Додати нову адресу</a>
        </div>
    }
    @Html.Hidden("AddressId", defaultAddressId)
    @Html.Hidden("ShippingAddress", null, new { id="shippingAddress" })
</div>


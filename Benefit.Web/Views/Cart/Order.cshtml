@model CompleteOrderViewModel
@using Benefit.Common.Constants
@using Benefit.Common.Helpers
@using Benefit.DataTransfer.ViewModels
@using Benefit.Domain.Models
@using Benefit.Services
@using Newtonsoft.Json
@{
    ViewBag.Title = "Оформлення замовлення";
}
@section styles
{
    <link href="~/Content/css/select2.min.css" rel="stylesheet" />
}
@section scripts
{
    <script src="~/Scripts/common.js" defer></script>
    <script src="~/Scripts/jquery.autocomplete.min.js" defer></script>
    <script src="~/Scripts/address.js" defer></script>
    <script src="~/Scripts/select2.min.js" defer></script>

    <script>
        var getUserIdIfExist = false;
        var shippingMethodsJson = @Html.Raw(JsonConvert.SerializeObject(Model.ShippingMethods));
        var loginUrl = '@Url.Action("Login", "Account")' +
            '?returnUrl=@HttpUtility.UrlEncode(Url.Action("Order", "Cart"))&isAjaxRequest=true';
        var isAuthenticated = ('@User.Identity.IsAuthenticated' === 'True');

        window.addEventListener('DOMContentLoaded', function () {
            var token = $('[name=__RequestVerificationToken]').val();
            CalculateSummary();
            SetRegionsAutocomplete();

            var npCitiesRequestData = {
                'modelName': 'Address',
                "calledMethod": "getCities",
                "methodProperties": {
                    "FindByString": ""
                },
                "apiKey": "@SettingsService.NovaPoshta.ApiKey"
            };
            var npWarehousesRequestData = {
                "modelName": "Address",
                "calledMethod": "getWarehouses",
                "methodProperties": {
                    "CityRef": "[cityref]"
                }
            };

            $("body").on("click",
                ".login-link",
                function () {
                    $(".login-tab").click();
                });

            if ($(".nova-poshta").length > 0) {
                var majorCities;
                var searchFlag = true;;
                $.post('@SettingsService.NovaPoshta.ApiUrl',
                    JSON.stringify(npCitiesRequestData),
                    function (res) {
                        res.data = res.data.filter(function (entry) { return parseInt(entry.CityID) < 30 });
                        majorCities = $.map(res.data, function (obj) {
                            return { id: obj.Ref, text: obj.Description };
                        });
                    });

                $("#npCity").select2({
                    placeholder: "Оберіть місто",
                    ajax: {
                        url: '@SettingsService.NovaPoshta.ApiUrl',
                        method: "POST",
                        data: function (params) {
                            if (typeof params.term !== 'undefined' && params.term.length >= 3) {
                                npCitiesRequestData.methodProperties.FindByString = params.term;
                                searchFlag = true;
                                return JSON.stringify(npCitiesRequestData);
                            }
                            else {
                                searchFlag = false;
                            }
                        },
                        processResults: function (data) {
                            var res;
                            if (searchFlag) {
                                res = $.map(data.data, function (obj) {
                                    return { id: obj.Ref, text: obj.Description };
                                });
                            }
                            else {
                                res = majorCities;
                            }
                            return {
                                results: res
                            }
                        }
                    }
                }).on('select2:select',
                    function (e) {
                        var data = e.params.data;
                        $('#npWarehouse').children('option').remove();
                        //fetch warehouses
                        var strWarehouseData =
                            JSON.stringify(npWarehousesRequestData).replace("[cityref]", data.id);
                        $.post('@SettingsService.NovaPoshta.ApiUrl',
                            strWarehouseData,
                            function (warRes) {
                                warRes = JSON.parse(warRes);
                                $.each(warRes.data,
                                    function (index, warValue) {
                                        $("#npWarehouse").append($("<option></option>")
                                            .attr("value", warValue.Ref)
                                            .text(warValue.Description));
                                    });
                                $("#npWarehouse").select2({
                                    placeholder: "Оберіть відділення",
                                });
                            });
                    });
            }

            $("input[name=ShippingMethodId]").change(function() {
                $(".shipping-method").hide();
                var shippingType = $(this).attr("data-shipping-type");
                var shippinWrap = $(".shipping-method[data-shipping-type=" + shippingType + "]");
                if (shippinWrap.length > 0) {
                    shippinWrap.show();
                } else {
                    $("#shippingAddresses").show();
                }
            });

            $("body").on("click focusout",
                "input",
                function () {
                    if ($("#register-form input:hasValue").length == $("#register-form input").length &&
                        $("#delivery input:checked").length > 0 &&
                        $("#payment input:checked").length > 0 &&
                        ($("#shippingAddresses").css('display') === 'none' ||
                            ($("#shippingAddresses").css('display') === 'block' &&
                                $("#shippingAddresses input:hasValue").length > 0))) {
                        $("#save-order").data("validation", "true");
                        $("#save-order span").removeClass("btn-secondary");
                        $("#save-order span").addClass("btn-default");
                    }
                });

            $("#save-order").click(function() {
                var btn = $(this);
                if (btn.data("validation") == false) {
                    flashMessage("Будь ласка заповніть всі поля", 0);
                    $('html,body').animate({ scrollTop: 0 }, 'fast');
                    return;
                }
                btn.find(".btn").attr("disabled", "disabled");
                showLoader();
                var shippingMethod = $("input[name=ShippingMethodId]:checked");
                var shippingMethodType = shippingMethod.attr("data-shipping-type");
                var address = "";
                if (shippingMethodType == @((int) DefinedShippingType.NovaPoshta)) {
                    address = shippingMethod.parent().text() +
                        " " +
                        $("#npCity option:selected").text() +
                        " " +
                        $("#npWarehouse option:selected").text();
                }
                if (shippingMethodType == @((int) DefinedShippingType.Self)) {
                    address = "@Enumerations.GetDisplayNameValue(DefinedShippingType.Self)";
                }
                $("#shippingAddress").val(address);
                if (!isAuthenticated) {
                    var registerForm = $("#register-form");
                    var registerFormJson = getFormData(registerForm);
                    var formSubmitUrl = registerForm.attr("action");
                    if (getUserIdIfExist) {
                        formSubmitUrl += "&getUserIdIfExists=true";
                    }
                    $.post(formSubmitUrl,
                        {
                            "__RequestVerificationToken": token,
                            "model": registerFormJson
                        },
                        function(data) {
                            if (data.error) {
                                flashMessage(data.error, true, true);
                                $('html,body').animate({ scrollTop: 0 }, 'fast');
                                if (data.existingUserWarning) {
                                    getUserIdIfExist = true;
                                }
                            } else {
                                $("#AddressId").val(data.shippingAddressId);
                                $("#UserId").val(data.userId);
                                $("#order-form-wrap form").submit();
                            }
                            btn.find(".btn").removeAttr("disabled");
                            hideLoader();
                        });
                } else {
                    $("#order-form-wrap form").submit();
                }
            });

            $(".btn-ajax-login").click(function() {
                var username = $("#UserName").val();
                var password = $("#UserPassword").val();

                $.post(loginUrl,
                    {
                        "__RequestVerificationToken": token,
                        "model": {
                            "UserName": username,
                            "Password": password
                        }
                    },
                    function(data) {
                        if (data.error) {
                            flashMessage(data.error, true, true);
                        } else {
                            location.href = data.returnUrl;
                        }
                    });
            });

            $(".delivery_address_item").click(function() {
                var addressId = $(this).attr("data-address-id");
                $("#AddressId").val(addressId);
                $(".delivery_address_item").removeClass("active");
                $(".delivery_address_item").hide();
                $(this).addClass("active");
                $(this).show();
            });
            $(".chose_new_address").click(function(e) {
                e.preventDefault();
                $(".delivery_address_item").show();
            });

            $("input[name=ShippingMethodId]").change(function() {
                if ($(this).attr("data-skip-address").toLowerCase() === "true") {
                    $(".delivery_address").hide();
                    $("#RequireAddress").val("False");
                } else {
                    $(".delivery_address").show();
                    $("#RequireAddress").val("True");
                }
            });

            $("input[name=ShippingMethodId], input[name=PaymentType]").change(function() {
                CalculateSummary();
            });

            function CalculateSummary() {
                var selectedShippingId = $("input[name=ShippingMethodId]:checked");
                var selectedPaymentType = $("input[name=PaymentType]:checked");

                if (selectedShippingId.length > 0 && selectedPaymentType.length > 0) {
                    var selectedShipping = shippingMethodsJson.filter(function(shipping) {
                        return shipping.Id == selectedShippingId.val();
                    })[0];
                    $("#payment-summary").show();
                    $("#checkout").removeAttr("disabled");
                    //shipping
                    var selectedShippingId = selectedShipping.Id;
                    var orderSum = parseFloat($("#order-total").text());
                    var promotion = 0;
                    if ($("#promotion").length > 0) {
                        promotion = parseFloat($("#promotion").text());
                    }
                    var shippingCost = 0;
                    var selectedShipping = shippingMethodsJson.filter(function(shipping) {
                        return shipping.Id == selectedShippingId;
                    })[0];
                    if (orderSum < selectedShipping.FreeStartsFrom) {
                        if (selectedShipping.CostBeforeFree == null) {
                            $("#shipping-cost").text("По тарифам кур'єрської служби");
                        } else {
                            $("#shipping-cost").text(selectedShipping.CostBeforeFree.toFixed(2));
                            shippingCost = selectedShipping.CostBeforeFree;
                        }
                    } else {
                        $("#shipping-cost").text(shippingCost.toFixed(2));
                    }

                    //paymentType
                    var sum = parseFloat($("#order-total").text());
                    if (selectedPaymentType.attr("id") == "@PaymentType.Bonuses.ToString()") {
                        var checkBonusesUrl = '@Url.Action("CheckEnaughBonuses", "Cart")';
                        $.get(checkBonusesUrl + "?sum=" + (orderSum - promotion),
                            function(data) {
                                if (data.total) {
                                    $("#bonuses-summary").show();
                                    //bonuses section
                                    $("#bonuses-discount").text(((sum - promotion) - 0.01).toFixed(2));
                                    $("#bonuses-total").text(((sum - promotion) - 0.01).toFixed(2));

                                    //payment section
                                    $("#pay-total").text((shippingCost + 0.01).toFixed(2));
                                    $("#discount").text(((sum - promotion) - 0.01).toFixed(2));
                                    $("#discount-row").show();
                                } else {
                                    //todo: add pretty windows
                                    alert("Недостатньо бонусів на рахунку");
                                    selectedPaymentType[0].checked = false;
                                    $("#checkout").attr("disabled", "disabled");
                                }
                            });
                    } else {
                        $("#bonuses-summary").hide();
                        $("#discount-row").hide();
                    }
                    $("#pay-total").text((shippingCost + orderSum - promotion).toFixed(2));
                }
            }
        });
    </script>
}

@Html.AntiForgeryToken()
<div class="wrapper_inner " style="margin-top: 10px;">
    @Html.Partial("_BreadcrumbsPartial", new BreadCrumbsViewModel
    {
        Page = new InfoPage()
        {
            Title = "Оформлення замовленя",
            Name = "Оформлення замовленя"
        }
    })
    <div class="page-top-main">
        <h1 id="pagetitle">Оформлення замовлення</h1>
    </div>
    @Html.Partial("_FlashMessage")
    <div class="col-md-9 col-sm-9" style="padding: 0;">
        @if (!User.Identity.IsAuthenticated)
        {
            <div class="card">
                <ul class="nav nav-tabs" role="tablist">
                    <li role="presentation" class="active register-tab"><a href="#auth" class="login-tab" aria-controls="home" role="tab" data-toggle="tab">Постійний клієнт</a></li>
                    <li role="presentation"><a href="#reg" aria-controls="home" role="tab" data-toggle="tab">Новий клієнт</a></li>
                </ul>

                <div class="tab-content no-padding-top">
                    <div role="tabpanel" class="tab-pane active" id="auth">
                        <div class="row">
                            <div class="col-sm-6">
                                <label> Логін </label>
                                @Html.TextBox("UserName", null, new { @class = "enter_email", type = "email" })
                            </div>
                            <div class="col-sm-6">
                                <label> Пароль </label>
                                @Html.Password("UserPassword", null, new { @class = "enter_password" })
                            </div>
                        </div>
                        <br>
                        <div class="row">
                            <div class="col-sm-6">
                            </div>
                            <div class="col-sm-6">
                                <div class="bx-soa-cart-total-button-container" style="float: right;">
                                    <a href="#" class="btn btn-default btn-lg btn-ajax-login">Увійти</a>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <p>Увійти через акаунт</p>
                        @using (Html.BeginForm("ExternalLogin", "Account", new { returnUrl = "/cart/order/" + Model.SellerId }))
                        {
                            @Html.AntiForgeryToken()
                            <div id="socialLoginList" class="row">
                                <div class="col-sm-6">
                                    <button type="submit" class="button-sc button-large button-gray" id="Facebook" name="provider" value="Facebook" title="Log in using your Facebook account">
                                        <i class="fa fa-facebook"></i>
                                        Facebook
                                    </button>
                                </div>
                                <div class="col-sm-6">
                                    <button type="submit" class="button-sc button-large button-gray" id="Google" name="provider" value="Google" title="Log in using your Google account">
                                        <svg height="18" width="18" class="margin-right-10">
                                            <svg viewBox="0 0 512 512" id="icon-google-colored">
                                                <path style="fill:#FBBB00;" d="M113.47,309.408L95.648,375.94l-65.139,1.378C11.042,341.211,0,299.9,0,256  c0-42.451,10.324-82.483,28.624-117.732h0.014l57.992,10.632l25.404,57.644c-5.317,15.501-8.215,32.141-8.215,49.456  C103.821,274.792,107.225,292.797,113.47,309.408z"></path>
                                                <path style="fill:#518EF8;" d="M507.527,208.176C510.467,223.662,512,239.655,512,256c0,18.328-1.927,36.206-5.598,53.451  c-12.462,58.683-45.025,109.925-90.134,146.187l-0.014-0.014l-73.044-3.727l-10.338-64.535  c29.932-17.554,53.324-45.025,65.646-77.911h-136.89V208.176h138.887L507.527,208.176L507.527,208.176z"></path>
                                                <path style="fill:#28B446;" d="M416.253,455.624l0.014,0.014C372.396,490.901,316.666,512,256,512  c-97.491,0-182.252-54.491-225.491-134.681l82.961-67.91c21.619,57.698,77.278,98.771,142.53,98.771  c28.047,0,54.323-7.582,76.87-20.818L416.253,455.624z"></path>
                                                <path style="fill:#F14336;" d="M419.404,58.936l-82.933,67.896c-23.335-14.586-50.919-23.012-80.471-23.012  c-66.729,0-123.429,42.957-143.965,102.724l-83.397-68.276h-0.014C71.23,56.123,157.06,0,256,0  C318.115,0,375.068,22.126,419.404,58.936z"></path>
                                            </svg>
                                        </svg>
                                        <span>
                                            Google
                                        </span>
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                    <div role="tabpanel" class="tab-pane" id="reg">
                        <form action="@Url.Action("Register", "Account")?isAjaxRequest=true&returnUrl=@Url.Action("Order", "Cart")" method="POST" id="register-form">
                            <div class="row">
                                <div class="col-sm-6">
                                    <label> Ім'я та прізвище *</label>
                                    @Html.TextBox("FullName", null)
                                    @Html.ValidationMessage("FullName")
                                </div>
                                <div class="col-sm-6">
                                    @{
                                        var regionNameCookie = Request.Cookies[RouteConstants.RegionNameCookieName];
                                        var regionNameCookieVal = regionNameCookie == null ? null : HttpUtility.UrlDecode(regionNameCookie.Value);
                                        var regionIdCookie = Request.Cookies[RouteConstants.RegionIdCookieName];
                                        var regionIdCookieVal = regionIdCookie == null ? null : HttpUtility.UrlDecode(regionIdCookie.Value);
                                    }
                                    <label> Місто *</label>
                                    @Html.TextBox("RegionName", regionNameCookieVal, new { @class = "regionSearch" })
                                    @Html.Hidden("RegionId", regionIdCookieVal)
                                    @Html.ValidationMessage("RegionId")
                                </div>
                            </div>
                            <br>
                            <div class="row">
                                <div class="col-sm-6">
                                    <label> Номер телефону *</label>
                                    @Html.TextBox("PhoneNumber", null, new { type = "tel", @class = "phone-input" })
                                    @Html.ValidationMessage("PhoneNumber")
                                </div>
                                <div class="col-sm-6">
                                    <label> E-mail *</label>
                                    @Html.TextBox("Email", null, new { type = "email" })
                                    @Html.ValidationMessage("Email")
                                </div>
                            </div>
                            <br>
                        </form>
                        <br>
                        <div class="row">
                            <div class="col-sm-6">
                                Натискаючу оформити замовлення, ви погоджуєтесь з
                                <a href="@Url.RouteUrl("pagesRoute", new {id = "ugoda-korustuvacha"})">угодою користувача</a>
                            </div>
                            <div class="col-sm-6">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div id="order-form-wrap">
            <form action="@Url.Action("order", new {id = Model.SellerId})" method="post">
                <input type="hidden" name="SellerId" value="@Model.SellerId" />
                @Html.Partial("_ShippingMethods", Model)
                <div class="card shipping-method" data-shipping-type="3" style="display: none;" id="shippingAddresses">
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active"><a href="#delivery" aria-controls="home" role="tab" data-toggle="tab">Адреса доставки</a></li>
                    </ul>

                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane active" id="delivery">
                            <div class="row">
                                @Html.Partial("_ShippingAddresses", Model)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card">
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active"><a href="#payment" aria-controls="home" role="tab" data-toggle="tab">Методи оплати</a></li>
                    </ul>
                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane active" id="payment">
                            <div class="row">
                                @Html.Partial("_PaymentTypes", Model)
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card">
                    <ul class="nav nav-tabs" role="tablist">
                        <li role="presentation" class="active"><a href="#comment" aria-controls="home" role="tab" data-toggle="tab">Коментар до замовлення</a></li>
                    </ul>

                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane active" id="comment">
                            <div class="row">
                                <div class="row" style="margin: 3px;">
                                    <div class="col-sm-12">
                                        @Html.TextArea("Comment")
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="col-md-3 col-sm-3">
        <div class="cart-summary">
            <div class="card">
                <ul class="nav nav-tabs" role="tablist">
                    <li role="presentation"><a href="#" aria-controls="cart" role="tab" data-toggle="tab">Ваше замовлення</a></li>
                </ul>

                <!-- Tab panes -->
                <div class="tab-content" style="max-height: 620px; overflow: auto;">
                    <div role="tabpanel" class="tab-pane active" id="cart">
                        @Html.Partial("_OrderProducts", Model)
                    </div>
                    <a href="#" class="order-edit">Редагувати замовлення</a>
                </div>
                <hr>
                @*<h5 style="margin: 15px; padding-bottom: 10px; text-align: right;">Всього: 1 000,00 грн.</h5>*@
                @Html.Partial("_PaymentSummary", Model)
            </div>
            <div class="button_block col-sm-3 col-md-3 display-block-xs" id="save-order" data-validation="false" style="text-align: center; float: none; padding: 0;">
                <span class="btn btn-secondary bold height-50px" style="font-size: 17px; line-height: 2em;">
                    Оформити замовлення
                </span>
            </div>
            <br class="visible-xs" />
        </div>
    </div>
    <!--	SIDEBAR BLOCK	-->
</div>

@using System.Web.Mvc.Html
@using Benefit.Common.Constants
@using Benefit.DataTransfer.ViewModels
@using Benefit.Domain.Models
@using Benefit.Services.Domain
@model Benefit.Domain.Models.Search.SearchResult

@{
    ViewBag.Title = string.Format("Результати пошуку '{0}'", Model.Term);
}
@section scripts
{
    <script src="~/Scripts/v3/products.js"></script>
    <script>
        var productOptionsUrl = '@Url.Action("GetProductOptions", "Tovar")';
        var addToCartUrl = '@Url.Action("AddProduct", "Cart")';
        var options = "";
        var skip = parseInt('@ListConstants.DefaultTakePerPage');
        var searchProductsUrl = '@Url.Action("GetProducts", "Search")';
        var term = '@Model.Term';

        $(function () {
            $(".bx_filter_parameters_box_title").click(function() {
                $(this).parent().toggleClass("active");
                $(this).next().slideToggle();
            });

            $(".filter_opener").click(function() {
                $(this).toggleClass("opened");
                $(".bx_filter_vertical, .bx_filter").slideToggle(333);
            });
            $(".ajax_load_btn, .paging").click(function (e) {
                e.preventDefault();
                var moreBtn = $(this);
                var page = parseInt(moreBtn.attr("data-page"));
                $(".loader").show();
                $.get(searchProductsUrl + "?term=@Model.Term&options="+options+"&sellerId=@Model.SellerId&page=" +
                    page +
                    "&options=" +
                    options,
                    function(data) {
                        if (moreBtn.hasClass("ajax_load_btn")) {
                            if (data.number <= parseInt('@ListConstants.DefaultTakePerPage')) {
                                moreBtn.hide();
                            }
                            $(".product-item:last").after(data.products);
                            moreBtn.attr("data-page", page + 1);
                            $(".paging[data-page=" + page + "]").addClass("cur");
                        } else {
                            $(".products-wrapper").html(data.products);
                            $("html, body").animate({ scrollTop: 0 }, 600);
                            $(".paging").removeClass("cur");
                            $(".paging[data-page=" + page + "]").addClass("cur");
                            $(".ajax_load_btn").attr("data-page", (page + 1));
                        }
                        $(".loader").hide();
                    });
            });

            var parts = location.href.split('/');
            var lastSegmentWithQS = (parts.pop() || parts.pop()).replace('#', '');// handle potential trailing slash
            var lastSegment = lastSegmentWithQS.substr(0, lastSegmentWithQS.indexOf('?'));
            var query = lastSegmentWithQS.substr(lastSegmentWithQS.indexOf('?'), lastSegmentWithQS.length);
            if (lastSegment !== "search") {
                options = lastSegment;
                $.each(options.split(";"),
                    function(i, urlSegment) {
                        if (urlSegment === "") return;
                        var optKeyValue = urlSegment.split("=");
                        var optionName = optKeyValue[0];
                        var optionValues = optKeyValue[1].split(",");

                        $.each(optionValues,
                            function(j, optValue) {
                                $(".filter-section[data-filter-name=" + optionName + "] input#" + decodeURI(optValue))
                                    .prop('checked', true);
                                $(".filter-section[data-filter-name=" +
                                    optionName +
                                    "] input[name=" +
                                    decodeURI(optValue).replace(" ", "") +
                                    "]").prop('checked', true);
                            });
                    });
            }
            $('body').on('change click',
                "#productFilters input[type=checkbox], .sort_btn",
                function(e) {
                    e.preventDefault();
                    $(".loader").show();
                    //var parts = location.href.split('/');
                    //var lastSegment = (parts.pop() || parts.pop()).replace("#", ""); // handle potential trailing slash
                    var options = "";

                    if (lastSegment != 'search') {
                        options = lastSegment;
                    }

                    var parent = $(this).parents(".filter-section");
                    var optionName = parent.attr("data-filter-name");
                    var optionNameIndex = options.indexOf(optionName);

                    var currentOption = '';
                    var selectedValues = parent.find("input[type=checkbox]:checked").map(function() {
                        return $(this).attr("id");
                    }).get();

                    if ($(this).attr("class").indexOf("sort_btn") >= 0) {
                        var val = $(this).attr("data-sort-value");
                        selectedValues.push(val);
                    }
                    if (selectedValues.length > 0) {
                        currentOption = optionName;
                        currentOption += "=";
                        currentOption += selectedValues.join();
                        currentOption += ";";
                    }

                    if (optionNameIndex >= 0) {
                        var ending = options.indexOf(";", optionNameIndex);
                        var oldOption = options.substring(optionNameIndex, ending + 1);
                        options = options.replace(oldOption, currentOption);
                    } else {
                        options += currentOption;
                    }
                    var locBuilder = "";
                    if (lastSegment === "search") {
                        locBuilder = location.href.replace(lastSegmentWithQS, "search/" + options + query);
                    } else {
                        locBuilder = location.href.replace(lastSegmentWithQS, options + query);
                    }
                    location.href = locBuilder;
                });
        });
    </script>
}

<div class="wraps hover_shine" id="content">
    <!--title_content-->
    <div class="top_inner_block_wrapper maxwidth-theme" style="height: 80px;">
        <section class="page-top maxwidth-theme ">
            @Html.Partial("_BreadcrumbsPartial", new BreadCrumbsViewModel()
            {
                Page = new InfoPage()
                {
                    Name = "Пошук"
                }
            })
            <div class="page-top-main">
                Результати пошуку запиту <strong class="bigger-125">"@Model.Term"</strong>
            </div>
        </section>
    </div>

    <div class="wrapper_inner no-padding-top">
        <div class="right_block  wide_N">
            <div class="middle ">
                <div class="container">
                    <div class="right_block1 clearfix catalog vertical" id="right_block_ajax">
                        <div class="js_filter filter_horizontal">
                            <div class="bx_filter bx_filter_vertical"></div>
                        </div>
                        <div class="inner_wrapper">
                            <div class="adaptive_filter margin-bottom-5">
                                <a class="filter_opener">
                                    <i class="fa fa-filter black"></i>
                                    <span>Фільтри та сортування</span>
                                </a>
                            </div>
                            <div class="sections_wrapper">
                                <div class="list items">
                                    <div class="row margin0 products-wrapper">
                                        @foreach (var product in Model.Products.Take(ListConstants.DefaultTakePerPage))
                                        {
                                            @Html.Partial("~/Views/Catalog/_ProductPartial.cshtml", product)
                                        }
                                    </div>
                                </div>
                                <div class="bottom_nav margin-top-20">
                                    @if (Model.Products.Count > ListConstants.DefaultTakePerPage)
                                    {
                                        <div class="ajax_load_btn" data-page="0">
                                            <span class="more_text_ajax">Показати ще</span>
                                        </div>
                                    }
                                    @if (Model.PagesCount > 1)
                                    {
                                        <div class="module-pagination">
                                            <div class="nums">
                                                <a href="#" class="paging dark_link cur" data-page="0">1</a>
                                                @for (int i = 2; i <= Model.PagesCount; i++)
                                                {
                                                    <a href="#" class="paging dark_link" data-page="@(i - 1)">@i</a>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="left_block">
            @Html.Partial("~/Views/Catalog/_ProductFilters.cshtml", Model.ProductParameters)
        </div>
    </div>
</div>
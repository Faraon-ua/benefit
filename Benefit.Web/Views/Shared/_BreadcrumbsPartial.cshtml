@using Benefit.Common.Constants
@model Benefit.DataTransfer.ViewModels.BreadCrumbsViewModel

<div class="bread_crumbs">
    <ul>
        <li><a href="@Url.Action("Index", "Home")">Головна</a></li>
        @if (Model.Seller != null && !Model.IsInfoPage)
        {
            <li>
                &gt; <a href="@Url.RouteUrl(RouteConstants.SellersRouteName, new { action = "Info", id=Model.Seller.UrlName })">@Model.Seller.Name</a>
            </li>
        }
        @foreach (var breadCrumb in Model.Categories)
        {
            <li>
                &gt;
@*                if seller info page do not include seller url*@
                @if (Model.Seller == null || (Model.Seller != null && Request.RequestContext.RouteData.Values["action"].ToString().ToLower() == "info"))
                {
                    <a href="@Url.RouteUrl(RouteConstants.CategoriesRouteName, new {id = breadCrumb.UrlName})">@breadCrumb.Name</a>
                }
                else
                {
                    <a href="@Url.RouteUrl(RouteConstants.SellerCatalogRouteName, new { sellerUrl = Model.Seller.UrlName, categoryUrl = breadCrumb.UrlName })">@breadCrumb.Name</a>
                }
            </li>
        }
        @if (Model.Seller != null && Model.IsInfoPage)
        {
            <li>
                &gt; <a href="@Url.RouteUrl(RouteConstants.SellersRouteName, new { action = "Info", id=Model.Seller.UrlName })">@Model.Seller.Name</a>
            </li>
        }
        @if (Model.Product != null)
        {
            <li>
                &gt; <a href="@Url.RouteUrl(RouteConstants.ProductRouteName, new { categoryUrl = Model.Categories.Last().UrlName, productUrl = Model.Product.UrlName })">@Model.Product.Name</a>
            </li>
        }
    </ul>
</div>

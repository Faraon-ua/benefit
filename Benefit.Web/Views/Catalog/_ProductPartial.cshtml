@using Benefit.Common.Constants
@using Benefit.Common.Helpers
@model Benefit.DataTransfer.ViewModels.ProductPartialViewModel

@*<div class="product_container" id="@Model.Product.Id">
        <div class="product">
            <div class="product_img_wrap">
                @{
                    var image = Model.Product.Images.OrderBy(entry => entry.Order).FirstOrDefault();
                    var productDetailsUrl = Url.RouteUrl(RouteConstants.ProductRouteWithSellerName, new { categoryUrl = Model.CategoryUrl ?? Model.Product.Category.UrlName, sellerUrl = Model.SellerUrl ?? Model.Product.Seller.UrlName, productUrl = Model.Product.UrlName });
                }

                <a href="@productDetailsUrl" title="@Model.Product.Name">
                    @if (image == null)
                    {
                        <img src="~/Images/ProductGallery/default_product_thumbnail.png" alt="@Model.Product.Name">
                    }
                    else
                    {
                        if (image.IsAbsoluteUrl)
                        {
                            <img src="@image.ImageUrl" alt="@Model.Product.Name">
                        }
                        else
                        {
                            <img src="~/Images/ProductGallery/@Model.Product.Id/@image.ImageUrl" alt="@Model.Product.Name">
                        }
                    }
                </a>
            </div>

            <p class="product_name">
                <a href="@productDetailsUrl" title="@Model.Product.Name">
                    <span>@Model.Product.Name</span>
                </a>
            </p>
            <span style="color: @Enumerations.GetEnumDescription(Model.Product.AvailabilityState);">
                @Enumerations.GetDisplayNameValue(Model.Product.AvailabilityState)
            </span>
            <div class="rating_wrap">
                <div class="perelik_rating @CommonConstants.RatingToClass[Model.Product.AvarageRating ?? default(int)]"></div>
                <p class="rating_reviews">@Model.Product.ApprovedReviews.Count відгуків</p>
            </div>
            <div class="product_price">
                @Model.Product.Price грн/@(@Model.Product.IsWeightProduct ? "кг" : "шт")
                @if (Model.Product.WholesalePrice.HasValue)
                {
                    <span class="green">| @Model.Product.WholesalePrice.Value.ToString() грн/опт</span>
                }
            </div>
            <div class="product_control_wrap">
                <div class="product_like product_like_red"></div>
                <div class="product_scale"></div>

                @if (Model.Product.AvailabilityState == ProductAvailabilityState.NotInStock || ((Model.Product.AvailabilityState != ProductAvailabilityState.AlwaysAvailable || Model.Product.AvailabilityState != ProductAvailabilityState.OnDemand) && Model.Product.AvailableAmount == 0))
                {
                    <a class="product_buy bg-grey" href="#" disabled="disabled">Відсутній</a>
                }
                else
                {
                    var availableForPurchase = Model.Product.AvailableForPurchase(RegionService.GetRegionId());
                    if (availableForPurchase.Key)
                    {
                        <a class="product_buy" href="#" data-product-id="@Model.Product.Id" data-seller-id="@Model.Product.SellerId" data-is-weight-product="@Model.Product.IsWeightProduct" disabled>Купити</a>
                    }
                    else
                    {
                        <a class="product_buy bg-grey title-to-tooltip" href="#" disabled="disabled" title="Доставка по вибраному регіону неможлива. Доставка здійснюється по: @Model.AvailableForPurchase.Value">Купити</a>
                    }
                }
            </div>
        </div>
    </div>*@

@{
    var image = Model.Product.Images.OrderBy(entry => entry.Order).FirstOrDefault();
    var productDetailsUrl = Url.RouteUrl(RouteConstants.ProductRouteWithSellerName, new { categoryUrl = Model.CategoryUrl ?? Model.Product.Category.UrlName, sellerUrl = Model.SellerUrl ?? Model.Product.Seller.UrlName, productUrl = Model.Product.UrlName });
    var sellerUrl = Url.RouteUrl(Benefit.Common.Constants.RouteConstants.SellersRouteName, new { id = Model.Product.Seller.UrlName, action = string.Empty });
}

<div class="item" style="height: 585px;">
    <div class="img shine" style="text-align: left;">
        <a href="#" class="thumb">
            @if (image == null)
            {
                <img src="~/Images/ProductGallery/default_product_thumbnail.png" alt="@Model.Product.Title" title="@Model.Product.Title">
            }
            else
            {
                if (image.IsAbsoluteUrl)
                {
                    <img src="@image.ImageUrl" alt="@Model.Product.Title" title="@Model.Product.Title">
                }
                else
                {
                    <img src="~/Images/ProductGallery/@Model.Product.Id/@image.ImageUrl" alt="@Model.Product.Title" title="@Model.Product.Title">
                }
            }
        </a>

        <div class="stickers">
            @if (Model.Product.Seller.UserDiscount > 0)
            {
                <div class="sticker_sale_text">@Model.Product.Seller.UserDiscount %</div>
            }
            @*<div class="sticker_khit">Хит</div>*@
            @*<div class="sticker_aktsiya">Сове</div>*@
        </div>

        <a href="#" class="dark_link" style="font-size: 16px; font-weight: bold">@Model.Product.Name</a>

        <div class="rating" style="width:100%; ">
            <div class="iblock-vote small">
                <table class="table-no-border">
                    <tbody>
                    <tr>
                        @if (Model.Product.AvarageRating.HasValue)
                        {
                            for (int i = 1; i <= Model.Product.AvarageRating; i++)
                            {
                                <td>
                                    <div class="star-active star-voted" title="@i"></div>
                                </td>
                            }
                            <td><a href="#" style="padding-left: 20px;">@Model.Product.Reviews.Count відгуків</a></td>
                        }
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="sa_block" style="width:100%; float: left; ">
            <div class="item-stock">
                <span class="icon stock"></span>
                <span class="value" style="color: @Enumerations.GetEnumDescription(Model.Product.AvailabilityState);">
                    @Enumerations.GetDisplayNameValue(Model.Product.AvailabilityState)
                </span>
            </div>
            <div class="article_block"></div>
        </div>

        <div class="cost prices clearfix">
            <div class="price_matrix_block">
                <div class="price_matrix_wrapper ">
                    <div class="price">
                        @if (Model.Product.OldPrice.HasValue)
                        {
                            <span style="font-size: 14px; color: grey; text-decoration: line-through; margin-right: 10px;">@Model.Product.OldPrice грн/@(@Model.Product.IsWeightProduct ? "кг" : "шт")</span>
                            <br><br>
                        }
                        <span class="price_value">@Model.Product.Price грн/@(@Model.Product.IsWeightProduct ? "кг" : "шт")</span>
                        @if (Model.Product.WholesalePrice.HasValue)
                        {
                            <span class="green">| @Model.Product.WholesalePrice.Value.ToString() <span class="small">грн/опт</span></span>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="counter_wrapp ">
            <div class="counter_block">
                <span class="minus">-</span>
                <input class="text" name="quantity" value="1" type="text">
                <span class="plus">+</span>
            </div>
            <div class="button_block ">
                <span class="small to-cart btn btn-default transition_bg animate-load">
                    @*<img src="images/cart.png" class="visible-xs" width="20">*@
                    <i class="visible-xs fa fa-shopping-cart" style="width: 20px;"></i>
                    <i></i><span class="hidden-xs">Купити</span>
                </span>
            </div>
            <div class="button_block hidden-lg"></div>
            <br>
            <div class="item-stock" style="margin-top: 20px; text-align: left;">
                <a href="@sellerUrl">@Model.Product.Seller.Name</a><br>
                м. Постачальника
            </div>
        </div>
    </div>
</div>



@*<div class="item">
    <div class="stickers">
    </div>
    <div class="img shine" style="">
        <a href="#" class="thumb">
            @if (image == null)
            {
                <img src="~/Images/ProductGallery/default_product_thumbnail.png" alt="@Model.Product.Title" title="@Model.Product.Title">
            }
            else
            {
                if (image.IsAbsoluteUrl)
                {
                    <img src="@image.ImageUrl" alt="@Model.Product.Title" title="@Model.Product.Title">
                }
                else
                {
                    <img src="~/Images/ProductGallery/@Model.Product.Id/@image.ImageUrl" alt="@Model.Product.Title" title="@Model.Product.Title">
                }
            }
        </a>
    </div>
    <div class="name">
        <a href="@productDetailsUrl" class="dark_link">@Model.Product.Name</a>
    </div>
    <div class="rating" style="width: 50%; float: left;">
        <div class="iblock-vote small">
            <table class="table-no-border">
                <tbody>
                    <tr>
                        <td>
                            <div class="star-active star-voted" title="1"></div>
                        </td>
                        <td>
                            <div class="star-active star-voted" title="2"></div>
                        </td>
                        <td>
                            <div class="star-active star-voted" title="3"></div>
                        </td>
                        <td>
                            <div class="star-active star-voted" title="4"></div>
                        </td>
                        <td>
                            <div class="star-active star-voted" title="5"></div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div class="sa_block" style="width: 50%; float: left; padding-top: 5px;">
        <div class="item-stock">
            <span class="icon stock"></span>
            <span class="value" style="color: @Enumerations.GetEnumDescription(Model.Product.AvailabilityState);">
                @Enumerations.GetDisplayNameValue(Model.Product.AvailabilityState)
            </span>
        </div>
        <div class="article_block"></div>
    </div>
    <div class="cost prices clearfix">
        <div class="price_matrix_block">
            <div class="price_matrix_wrapper ">
                <div class="price">
                    <span>
                        <span class="values_wrapper">
                            <span class="price_value">
                                @Model.Product.Price
                            </span>
                            <span class="small"> грн/@(@Model.Product.IsWeightProduct ? "кг" : "шт")</span>
                            @if (Model.Product.WholesalePrice.HasValue)
                            {
                                <span class="green">| @Model.Product.WholesalePrice.Value.ToString() <span class="small">грн/опт</span></span>
                            }
                        </span>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="counter_wrapp ">
        <div class="product_description_amount_wrap pull-right" data-weight-product="@Model.Product.IsWeightProduct">
                <div class="product_description_amount_minus">-</div>
                @if (Model.Product.IsWeightProduct)
                {
                    <input type="text" class="product_description_amount" value="0.1" data-is-weight-product="true">
                }
                else
                {
                    <input type="text" class="product_description_amount" value="1" data-is-weight-product="false">
                }
                <div class="product_description_amount_plus">+</div>
            </div>
        <div class="counter_block hidden-xs">
            <span class="minus">-</span>
            <input type="text" class="text" name="quantity" value="1">
            <span class="plus">+</span>
        </div>
        <div class="button_block ">
            <span class="small to-cart btn btn-default transition_bg animate-load"><i></i><span>Купити</span></span>
        </div>
        <br>
        <div class="item-stock" style="margin-top: 20px;">
            <a href="@sellerUrl">@Model.Product.Seller.Name</a><br>
            м. Постачальника
        </div>
    </div>
</div>*@
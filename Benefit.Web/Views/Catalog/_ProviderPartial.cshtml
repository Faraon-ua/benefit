@using System.Text
@using Benefit.Common.Constants
@using Benefit.Domain.Models
@using WebGrease.Css.Extensions
@model Seller
@{
    var categoryIds = string.Join(",", Model.SellerCategories.Select(entry => entry.CategoryId));
    var sellerOptions = new StringBuilder();
    if (Model.IsBenefitCardActive)
    {
        sellerOptions.Append("BenefitCard");
    }
    if (Model.IsBonusesPaymentActive)
    {
        sellerOptions.Append(",");
        sellerOptions.Append("BonusPayment");
    }
    if (Model.ShippingMethods.Any(entry => entry.FreeStartsFrom != null))
    {
        sellerOptions.Append(",");

        sellerOptions.Append("FreeShipping");
    }
    if (Model.IsAcquiringActive)
    {
        sellerOptions.Append(",");
        sellerOptions.Append("Acquiring");
    }
}
<div class="provider_container" data-category-ids="@categoryIds" data-seller-options="@sellerOptions">
    <div class="provider">
        <div class="provider_main_info">
            <div class="provider_bonus_label">@Model.UserDiscount% <br>бонус</div>
            <div class="provider_img_wrap">
                <img src="~/Images/SellerLogo/@Model.Images.FirstOrDefault(entry=>entry.SellerId == Model.Id && entry.ImageType == ImageType.SellerLogo).ImageUrl" alt="@Model.Name">
            </div>
            <p class="provider_name">@Model.Name</p>

            @{
                var specifics = @Model.SellerCategories.Select(entry => entry.Category.ParentCategory).Distinct();
                var result = (from specific in specifics where !specifics.Select(entry => entry.Id).Contains(specific.ParentCategoryId) select specific.Name).ToList();
                var specificsStr = string.Join("/", result);
            }
            <p class="provider_type">@specificsStr</p>
            <div class="rating_wrap">
                <div class="perelik_rating top"></div>
                <p class="rating_reviews">15 відгуків</p>
            </div>
            <div class="reviews_menu_wrap">
                <a href="@Url.RouteUrl(RouteConstants.SellersRouteName, new { action = "Info", id = Model.UrlName })" class="reviews_info">Інфо</a>
                <a href="#" class="reviews_menu">Меню</a>
            </div>
        </div>
        <div class="provider_additional_info">
            @{
                var address = Model.Addresses.FirstOrDefault();
            }
            @if (address != null && !string.IsNullOrEmpty(address.AddressLine))
            {
                <div class="provider_address">
                    <span>@address.Region.Name_ua, @address.AddressLine</span>
                </div>
            }
            @if (Model.IsBenefitCardActive)
            {
                <div class="provider_benefit_card"><span>Benefit Card</span></div>
            }
            @if (Model.ShippingMethods.Any())
            {
                var shipping = Model.ShippingMethods.First();
                <div class="provider_delivery"><span>Доставка по @shipping.Region.Name_ua</span></div>
            }
            @{
                var schedule = Model.Schedules.FirstOrDefault(entry => entry.Day == DateTime.UtcNow.DayOfWeek);
            }
            @if (schedule != null && schedule.StartHour != null)
            {
                <div class="provider_order_intake"><span>Години роботи сьогодні<br> з @schedule.StartHour до @schedule.EndHour</span></div>
            }
            @*            <div class="provider_ball_ratio"><span>2 грн = 1 бал</span></div>*@
            @if (Model.IsBonusesPaymentActive)
            {
                <div class="provider_bonus_payment"><span>Розрахунок бонусами</span></div>
            }
        </div>
    </div>
</div>

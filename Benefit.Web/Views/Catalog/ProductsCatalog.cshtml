@using Benefit.Common.Constants
@using Benefit.Web.Helpers
@using Benefit.Domain.Models
@model Benefit.DataTransfer.ViewModels.NavigationEntities.ProductsViewModel

@{
    string title;
    string description;
    string h1;
    if (Model.Seller != null)
    {
        if (Model.Category == null)
        {
            title = Model.Seller.Name + ": широкий вибір товарів на сайті benefit.ua";
            description = "Каталог товарів компанії " + Model.Seller.Name + " на Benefit-Company по кращим цінам. ✅Гарантія якості ✅Доставка по Україні.";
            h1 = Model.Seller.Name;
        }
        else
        {
            title = Model.Category.Name + Model.Seller.Name;
            description = string.Format("{0}. {1} на Benefit-Company по кращим цінам. ✅Гарантія якості ✅Доставка по Україні.", Model.Category.Name, Model.Seller.Name);
            h1 = Model.Category.Name;
        }
    }
    else
    {
        title = Model.Category.Title;
        description = Model.Category.MetaDescription;
        h1 = Model.Category.Name;
    }
    ViewBag.Title = title;
    ViewBag.SelectedCategory = Model.Category;
    ViewBag.CategoryToSellerDiscountPercent = Model.CategoryToSellerDiscountPercent;
    var isFavorites = (Model.Category != null && Model.Category.UrlName == "favorites");
    ViewBag.IsFavorites = isFavorites;
    var options = Request.RequestContext.RouteValue("options");
    var seller = ViewBag.Seller as Seller;
    var categories = ViewBag.SellerCategories as List<CategoryVM>;
}
@section meta
{
    @if (Model.Page > 1)
    {
        <link rel="prev" href="@Request.Url.AbsoluteUri.Replace("page="+Model.Page, "page="+(Model.Page-1))" />
    }
    @if (Model.Page < Model.PagesCount)
    {
        if (Request.Url.AbsoluteUri.Contains("page="))
        {
            <link rel="next" href="@Request.Url.AbsoluteUri.Replace("page=" + Model.Page, "page=" + (Model.Page + 1))" />
        }
        else
        {
            if (string.IsNullOrEmpty(options))
            {
                <link rel="next" href="@(Request.Url.AbsoluteUri + "/page=" + (Model.Page + 1) + ";")" />
            }
            else
            {
                <link rel="next" href="@(Request.Url.AbsoluteUri + "page=" + (Model.Page + 1) + ";")" />
            }
        }
    }

    <meta name="description" content="@description">
    <meta property="og:description" content="@description" />
    <meta property="og:title" content="@title" />
    <meta property="og:type" content="article" />
    @if (Model.Category != null)
    {
        <meta property="og:url" content="@string.Format("{0}://{1}{2}", Request.Url.Scheme, Request.Url.Host, Url.RouteUrl(RouteConstants.CatalogRouteName, new {categoryUrl = Model.Category.UrlName}))" />
        <meta property="og:image" content="@string.Format("{0}://{1}/Images/CategoryLogo/{2}", Request.Url.Scheme, Request.Url.Host, Model.Category.ImageUrl)" />
    }
    <meta property="og:site_name" content="Benefit Company" />
    @if (!string.IsNullOrEmpty(options))
    {
        <meta name="robots" content="noindex,follow" />
    }
}
@section styles
{
    <link href="~/Content/css/bootstrap-slider.css" rel="stylesheet" />
    @if (Model.Seller != null)
    {
        <link href="~/Content/css/seller.css" rel="stylesheet" />
    }
}
@section scripts{
    <script defer>
        var selectedProductId = null;
        var reloadOnProductAdd = false;
        var productOptionsUrl = '@Url.Action("GetProductOptions", "Tovar")';
        var productVariantsUrl = '@Url.Action("GetProductVariants", "Tovar")';
        var addToCartUrl = '@Url.Action("AddProduct", "Cart")';
        var getProductsUrl = '@Url.Action("GetProducts", "Catalog")';
        var addToFavoritesUrl =
            '@Html.Raw(Url.Action("AddToFavorites", "Tovar", new {returnUrl = Request.Url.PathAndQuery}))';
        var removeFromFavoritesUrl = '@Url.Action("RemoveFromFavorites", "Tovar")';
        var showMessagePopupUrl = '@Url.Action("ShowMessagePopup", "Home")';
        var hasCategory = "@((Model.Category == null).ToString().ToLower())" === 'false';
        var categoryId = '@(Model.Category == null ? "" : Model.Category.Id)';
        var sellerId = '@(Model.Seller == null ? "" : Model.Seller.Id)';
        var categoryUrlName = '@(Model.Category == null ? "" : Model.Category.UrlName.ToLower())';
        var pagesCount = parseInt('@Model.PagesCount');
        var takePerPage = parseInt('@ListConstants.DefaultTakePerPage');
        var term = "";
        var fetchFeaturedProducts = '@(ViewBag.FetchFeatured == null ? "false" : ViewBag.FetchFeatured.ToString().ToLower())' === 'true';
        var showCartOnOrder = '@(Model.Category == null ? "false" : Model.Category.ShowCartOnOrder.ToString())'.toLowerCase() === 'true';
        var getProductParameters = '@Url.Action("GetProductFilters", "Category", new { categoryId = Model.Category == null ? null : Model.Category.Id ?? Model.Category.UrlName, area = string.Empty, sellerId = (Model.Seller == null ? null : Model.Seller.Id) })';
        var productTemplateLayout = null;
        window.addEventListener('DOMContentLoaded', function() {
            $(".seo-fix").css("height", $(".group_description_block").outerHeight());
        });

        $(function () {
            @if(!isFavorites && Model.ProductParameters == null)
            {
                <text>
                    $.get(getProductParameters, function (data) {
                        $(".area-product-filters").html(data);
                    });
                </text>
            }
            else
            {
                <text>
                    $.getScript(routePrefix + "/Scripts/v3/product-filters.js")
                </text>
            }
            $(".seller-wrap a").click(function () {
                var title = $(this).html();
                var body = $(this).next(".content").html();
                $(".seller-content .modal-title").html(title);
                $(".seller-content .modal-body").html(body);
                $(".seller-content").modal();
            });
        });
    </script>
    <script src="~/Scripts/v3/products.js" defer></script>
    <script src="~/Scripts/v3/product-filters.js" defer></script>
    <script src="~/Scripts/bootstrap-slider.min.js" defer></script>
}

<div class="wraps hover_shine" id="content">
    <!--title_content-->
    <div class="top_inner_block_wrapper maxwidth-theme">
        <section class="page-top maxwidth-theme ">
            @if (Model.Breadcrumbs != null)
            {
                @Html.Partial("_BreadcrumbsPartial", Model.Breadcrumbs)
            }
            <div class="page-top-main">
                @if (Model.Category != null && Model.Category.ParentCategory != null)
                {
                    <div class="visible-xs">
                        <a href="@Url.RouteUrl(RouteConstants.CatalogRouteName, new {categoryUrl = Model.Category.ParentCategory.UrlName})" style="font-size: 16px; font-weight: bold;">
                            < @Model.Category.ParentCategory.Name
                        </a>
                    </div>
                    <h1 id="pagetitle" style="text-align: left;">
                        @h1
                    </h1>
                }
                @if (Model.Seller != null)
                {
                    @Html.Partial("~/Views/Seller/_SellerHead.cshtml", seller)
                }
            </div>
        </section>
    </div>

    <div class="wrapper_inner">
        <div class="right_block  wide_N">
            <div class="middle ">
                <div class="container">
                    <div class="right_block1 clearfix catalog vertical" id="right_block_ajax">
                        <div class="js_filter filter_horizontal">
                            <div class="bx_filter bx_filter_vertical"></div>
                        </div>
                        <div class="inner_wrapper">
                            <div class="adaptive_filter @(isFavorites? "hidden" : string.Empty)">
                                <a class="filter_opener">
                                    <i class="fa fa-filter black"></i>
                                    <span>Фільтри та сортування</span>
                                </a>
                            </div>

                            @if (Model.Category != null && string.IsNullOrEmpty(Request.RequestContext.RouteValue("options")))
                            {
                                <div class="group_description_block bottom">
                                    <div>
                                        @Html.Raw(Model.Category.Description)
                                    </div>
                                </div>
                            }
                            <div class="sort_header view_block">
                                @if (Model.Category != null && !isFavorites)
                                {
                                    <div class="sort_filter visible-lg filter-section" data-filter-name="sort">
                                        <span style="display: table-cell; vertical-align: middle;">Показати спочатку: </span>
                                        <a href="" data-sort-value="Rating" class="sort_btn" rel="nofollow">
                                            <span class="padding-10">По рейтингу</span>
                                        </a>
                                        <a href="" data-sort-value="NameAsc" class="sort_btn" rel="nofollow">
                                            <span class="padding-10">По алфавіту</span>
                                        </a>
                                        <a href="" data-sort-value="PriceAsc" class="sort_btn" rel="nofollow">
                                            <span class="padding-10">Дешеві</span>
                                        </a>
                                        <a href="" data-sort-value="PriceDesc" class="sort_btn" rel="nofollow">
                                            <span class="padding-10">Дорогі</span>
                                        </a>
                                    </div>
                                }
                                <div class="clearfix"></div>
                                <!--/noindex-->
                            </div>

                            <div class="sections_wrapper area-products-list">
                                @Html.Partial("~/Views/Catalog/_ProductsListPartial.cshtml", Model)
                            </div>
                            <div id="layout_fix" class="seo-fix">&nbsp;</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="left_block ">
            @if (seller != null && categories != null)
            {
                <div class="bx_filter bx_filter_vertical">
                    <div class="bx_filter_section" id="productFilters">
                        <div class="bx_filter_parameters_box title">

                            @Html.Partial("~/Views/Seller/_SellerMenu.cshtml", categories)
                        </div>
                    </div>
                </div>
            }
            <div class="area-product-filters">
                <div style="width:100%; text-align:center;">
                    @if (Model.ProductParameters == null)
                    {
                        <img src="~/Content/img/loading.gif" />
                    }
                    else
                    {
                        @Html.Partial("~/Views/Catalog/_ProductFilters.cshtml", Model.ProductParameters)
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<div id="product-purchase-wrap">
    @Html.Partial("~/Views/Tovar/_PurchaseRegion.cshtml", new Dictionary<string, string>() { { "0", string.Empty } })
</div>
<div id="product-options-wrap"></div>
<div id="product-variants-wrap"></div>
@if (Model.Category != null && !string.IsNullOrEmpty(Model.Category.Tag))
{
    @Html.Action("ShowMessagePopup", "Home", new { message = Model.Category.Tag, showButtons = true })
}
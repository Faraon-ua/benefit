@using System.Text
@using Benefit.Common.Constants
@using Benefit.DataTransfer.ViewModels
@using Benefit.Domain.Models.Enums
@using Microsoft.Owin
@model ProductsViewModel

@{
    var title = new StringBuilder();
    if (Model.Category != null)
    {
        title.Append(Model.Category.Name + " - ");
    }
    if (Model.Seller != null)
    {
        title.Append(Model.Seller.Name);
    }
    ViewBag.Title = title.ToString();
}

@section scripts{
    <script>
        var addToCartUrl = '@Url.Action("AddProduct", "Cart")';
        var checkSellerCartUrl = '@Url.Action("CheckSeller", "Cart")';
        var skip = parseInt('@ListConstants.DefaultTakePerPage');
        var getProductsUrl = '@Url.Action("GetProducts", "Catalog")';
        @{
            var categoryId = Model.Category == null ? "" : Model.Category.Id;
            var sellerId = Model.Seller == null ? "" : Model.Seller.Id;
        }
        $(function () {
            $("#add-more-products").click(function (e) {
                e.preventDefault();
                $.get(getProductsUrl + "?categoryId=@categoryId&sellerId=@sellerId&skip=" + skip + "&sort=" + $("select[name=sort]").val(), function (data) {
                    if (data.number <= parseInt('@ListConstants.DefaultTakePerPage')) {
                        $("#more-products").hide();
                    }
                    $("#more-products").before(data.products);
                    skip += data.number;
                });
            });

            var productOptionsUrl = '@Url.Action("GetProductOptions", "Tovar")';
            $("body").on("click", ".product_buy", function (e) {
                e.preventDefault();
                var productId = $(this).attr("data-product-id");
                var sellerId = $(this).attr("data-seller-id");
                $.get(checkSellerCartUrl + "?sellerId=" + sellerId, function (isAnotherSeller) {
                    if (isAnotherSeller) {
                        if (!confirm("Увага! У кошику є товари від іншого постачальника. Вони будуть видалені, якщо Ви продовжите цю дію.")) {
                            return;
                        }
                    }

                    $.get(productOptionsUrl + "?productId=" + productId, function (data) {
                        if (data) {
                            $("#product-options-wrap").html(data);
                            $("#product_modal").modal('show');
                        } else {
                            AddOrderProduct(productId, sellerId, false);
                        }
                    });
                });
            });

            $("body").on('click', "#buy-product, #buy-product-with-options", function () {
                var productId = $(this).attr("data-product-id");
                var sellerId = $(this).attr("data-seller-id");
                AddOrderProduct(productId, sellerId, true);
            });

            $("select[name=sort]").change(function () {
                $("form").submit();
            });
        });

        function AddOrderProduct(productId, sellerId, hasOptions) {

            $(this).attr("disabled", "disabled");
            $("#buy-product, #buy-product-with-options").attr('disabled', 'disabled');
            $("#" + productId).css("opacity", 0.3);

            //todo: add products amount in the products list
            var productAmount = 1; //$("#product_amount").val();
            var productOptions;
            if (hasOptions) {
                productOptions = $(".product_modal_form input[type=checkbox]:checked, .product_modal_form input[type=radio]:checked").map(function () {
                    var id = $(this).attr("id");
                    var amount = $(this).siblings(".modal_amount_wrap").find(".product_modal_amount").val();
                    if (!amount) {
                        amount = 1;
                    }
                    return {
                        ProductOptionId: id,
                        Amount: amount
                    };
                }).get();
            } else {
                productOptions = [];
            }

            var product = {
                ProductId: productId,
                Amount: productAmount,
                OrderProductOptions: productOptions
            };

            var order = {
                product: product,
                amount: productAmount
            };
            $.post(addToCartUrl + "?sellerId=" + sellerId,
                order,
                function (data) {
                    $('#product_modal').modal('hide');
                    setTimeout(function () {
                        $("#buy-product, #buy-product-with-options").removeAttr('disabled');
                        $("#" + productId).css("opacity", 1);
                        $("#cart-items-number").text(data);
                        $("#cart-items-number").show();
                        setCookie("cartNumber", data, { expires: 36000, path: "/" });
                    }, 1000);
                });
        }
    </script>
}
@section LeftAside{
    @Html.Partial("~/Views/Catalog/_ProductFilters.cshtml", Model)
}

<main class="full_content full_content_product">
    <div class="product_row clearfix">
        <div class="col-md-9">
            @Html.Partial("_BreadcrumbsPartial", Model.Breadcrumbs)
        </div>
        <div class="provider_sort col-md-3">
            @using (Html.BeginForm("Catalog", "Postachalnyk", FormMethod.Get))
            {
                var sort = Request.QueryString["sort"] == null ? ProductSortOption.Default : (ProductSortOption)Enum.Parse(typeof(ProductSortOption), Request.QueryString["sort"]);
                <label for="provider_sort_title">Сортувати</label>
                <select id="provider_sort_select" name="sort" class="provider_sort_select">
                    <option value="Default" @(sort == ProductSortOption.Default ? "selected" : "")>По замовчуванню</option>
                    <option value="PriceAsc" @(sort == ProductSortOption.PriceAsc ? "selected" : "")>Ціна &#8593;</option>
                    <option value="PriceDesc" @(sort == ProductSortOption.PriceDesc ? "selected" : "")>Ціна &#8595;</option>
                    <option value="NameAsc" @(sort == ProductSortOption.NameAsc ? "selected" : "")>А-Я</option>
                    <option value="NameDesc" @(sort == ProductSortOption.NameDesc ? "selected" : "")>Я-А</option>
                </select>
            }
        </div>
        @if (Model.Items.Any())
        {
            foreach (var product in Model.Items.Take(ListConstants.DefaultTakePerPage))
            {
                var partialModel = new ProductPartialViewModel { Product = product, CategoryUrl = Model.Category == null ? null : Model.Category.UrlName };
                @Html.Partial("~/Views/Catalog/_ProductPartial.cshtml", partialModel)
            }
            if (Model.Items.Count > ListConstants.DefaultTakePerPage)
            {
                <div class="product_container" id="more-products">
                    <div class="product">
                        @*<div class="more-items"></div>*@
                        <div>
                            <a class="more-items" href="#" id="add-more-products">Показати ще</a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div>У вибраній вами категорії не знайдено жодного товару</div>
        }

    </div>
    <div id="product-options-wrap"></div>
</main>

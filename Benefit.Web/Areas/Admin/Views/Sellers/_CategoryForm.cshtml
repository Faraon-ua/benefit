@model  KeyValuePair<int, Benefit.Domain.Models.SellerCategory>

<div class="display-flex belong-category">
    <div class="flex-grow-2">
        @if (Model.Value.CategoryId == null)
        {
            @Html.DropDownList(string.Format("Seller.SellerCategories[{0}].CategoryId", Model.Key), ViewBag.Categories as IEnumerable<SelectListItem>, "Не обрано", new { @class = "chosen-select category-id", data_number = Model.Key })
        }
        else
        {
            <span>@Model.Value.Category.ExpandedName</span>
            @Html.Hidden(string.Format("Seller.SellerCategories[{0}].CategoryId", Model.Key), Model.Value.CategoryId, new { @class = "category-id", data_number = Model.Key })
        }
    </div>
    <div class="flex-grow-1">
        <p>Загальний % знижки</p>
        @Html.TextBox(string.Format("Seller.SellerCategories[{0}].CustomDiscount", Model.Key), Model.Value.CustomDiscount, new { @class = "number-input width-90" })
    </div>
    <div class="flex-grow-1">
        <p>
            Націнка, %
        </p>
        @Html.TextBox(string.Format("Seller.SellerCategories[{0}].CustomMargin", Model.Key), Model.Value.CustomMargin, new { @class = "number-input width-90" })
    </div>
    <div class="flex-grow-1">
        <p>
            Порядковий №
        </p>
        @Html.TextBox(string.Format("Seller.SellerCategories[{0}].Order", Model.Key), Model.Value.Order, new { @class = "number-input width-90" })
    </div>
    <div class="flex-grow-1">
        <label for="@string.Format("Seller.SellerCategories[{0}].RootDisplay", Model.Key)">Основне меню</label> @Html.CheckBox(string.Format("Seller.SellerCategories[{0}].RootDisplay", Model.Key), Model.Value.RootDisplay)
    </div>
    <div>
        <a href="#" onclick="$(this).parent().parent().remove(); ReAssignIndexesToChildren('categories', 'belong-category');">
            <i class="icon-remove red"></i>
        </a>
    </div>
    <br />
</div>

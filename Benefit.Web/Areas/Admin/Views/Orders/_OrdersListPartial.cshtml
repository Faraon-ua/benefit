@using Benefit.Common.Constants
@using Benefit.Common.Helpers
@using Benefit.Common.Extensions
@using Benefit.Domain.Models
@model  Benefit.DataTransfer.ViewModels.PaginatedList<Order>

@if (Model.Items.Any())
{
    <ul class="pagination">
        @{
            var firstStage = Model.Pages >= ListConstants.PagingFirstStage ? ListConstants.PagingFirstStage : Model.Pages;
            var lastDisplayedPage = 0;
        }
        @for (var i = 0; i < Model.Pages; i++)
        {
            if ((i >= 0 && i < firstStage) ||
                (i >= Model.ActivePage - ListConstants.PagingActivePageSiblinbgsRange && i <= Model.ActivePage + ListConstants.PagingActivePageSiblinbgsRange) ||
                (i >= Model.Pages - ListConstants.PagingFirstStage && i < Model.Pages))
            {
                <li class="@(i == Model.ActivePage ? "active" : "" )">
                    <a href="#" data-page-number="@i">@(i + 1)</a>
                </li>
                lastDisplayedPage = i;
            }
            else
            {
                if (i == lastDisplayedPage + 1)
                {
                    <li>
                        <span class="pull-left">...</span>
                    </li>
                }
            }
        }
    </ul>
}
<div class="comment-section" style="display:none;">
    <span>Коментар до статусу</span>
    <br />
    <textarea class="status-comment" style="height:115px; width:100%;" placeholder="Текст повідомлення"></textarea>
</div>
<div class="orders-list">
    <div class="order-wrap">
        <div class="order-preview">
            <div class="col text-left" style="width: 190px;">
                <a href="#">Номер замовлення</a>
            </div>
            <div class="col" style="width: 165px;">
                <a href="#">Дата замовлення</a>
            </div>
            <div class="col" style="flex-grow: 1;">
            </div>
            <div class="col" style="width: 60px;">
                <a href="#">К-ть</a>
            </div>
            <div class="col text-center" style="width: 150px;">
                <a href="#">Сума</a>
            </div>
            <div class="col" style="width: 380px;">
                <a href="#">Статус замовлення</a>
            </div>
            <br style="clear:both" />
        </div>
    </div>
    @foreach (var item in Model.Items)
    {
        <div class="order-wrap" data-collapsed="true">
            <div class="order-preview">
                <div class="col text-left border-bottom order-number-wrap" style="width: 190px;">
                    <a href="#" class="order-number">
                        <i class="icon icon-chevron-down"></i>
                        № @Html.DisplayFor(modelItem => item.OrderNumber)
                    </a>
                    @if (!string.IsNullOrEmpty(item.Description))
                    {
                        <i class="fas fa-comment-alt" style="color:#FFDD33;" data-rel="hoverpopover" title="" data-content="@item.Description" data-html="true" data-original-title="Коментар покупця" data-trigger="hover"></i>
                    }
                    @if (item.OrderStatusStamps.Any(entry => !string.IsNullOrEmpty(entry.Comment)))
                    {
                        var comments = string.Join(
                            "",
                            item.OrderStatusStamps
                            .Where(entry => !string.IsNullOrEmpty(entry.Comment))
                            .OrderBy(entry => entry.Time)
                            .Select(entry => string.Format("<p>{0} <b>{1}</b><br /><i class='icon icon-circle' style='color:#4ebf42; margin-right:5px;'></i> {2}</p>", entry.Time.ToLocalDateTimeWithFormat(), entry.UpdatedBy, entry.Comment)));
                        <i class="fas fa-file" style="color:#8b0000;  margin-left: 5px;" data-rel="hoverpopover" title="" data-content="@comments" data-html="true" data-original-title="Коментар менеджера" data-trigger="hover"></i>

                    }
                </div>
                <div class="col border-bottom" style="width: 145px;">
                    @item.Time.ToLocalDateTimeWithFormat()
                </div>
                <div class="border-bottom" style="flex-grow: 1; padding: 15px 0;">
                    <div class="images-thmb">
                        @foreach (var product in item.OrderProducts)
                        {
                            <img data-src="@product.ProductImageUrl" />
                        }
                    </div>
                </div>
                <div class="col border-bottom" style="width: 60px;">
                    @item.OrderProducts.Count()
                </div>
                <div class="col text-center border-bottom" style="width: 150px;">
                    @item.Sum.ToString("F") грн
                </div>
                <div class="border-left data-status-preview" style="width: 380px;" data-order-id="@item.Id">
                    @Html.Partial("_OrderStatusPreviewPartial", item)
                </div>
            </div>
            <div class="display-flex">
                <div style="flex-grow:1;">
                    @foreach (var product in item.OrderProducts)
                    {
                        <div class="product-wrap">
                            <div class="border-bottom padding-10" style="display:flex;">
                                <div style="width: 200px; text-align: center;">
                                    <img src="@product.ProductImageUrl" />
                                </div>
                                <div class="width-100">
                                    <div class="product-title">@product.ProductName</div>
                                    <div class="product-secondary">
                                        Код товару: @product.ProductSku
                                    </div>
                                    <div style="display:flex; justify-content: space-between;" class="product-purchase-info">
                                        <div class="product-price">@product.ActualPrice грн</div>
                                        <div>
                                            @product.Amount
                                            @if (!product.IsWeightProduct)
                                            {
                                                <span> шт.</span>
                                            }
                                        </div>
                                        <div>@(product.ActualPrice * product.Amount) грн</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <div>
                        <div class="display-flex">
                            <div style="margin-left: auto;" class="padding-15">
                                Всього за товари
                                <b style="margin-left: 200px;">@item.Sum.ToString("F") грн</b>
                            </div>
                        </div>
                    </div>
                    <div class="display-flex padding-15" style="justify-content: space-between;">
                        <div class="width-20">Спосіб доставки</div>
                        <div style="max-width:250px;">
                            <b>@item.ShippingName</b>, <span style="font-size:13px;">@item.ShippingAddress</span>
                        </div>
                        <div style="margin-left: auto;" class="padding-15">
                            Доставка
                            <b style="margin-left: 200px;">@item.ShippingCost.ToString("F") грн</b>
                        </div>
                    </div>
                    <div class="display-flex padding-15">
                        <div class="width-20">Спосіб оплати</div>
                        <div style="max-width:250px;">
                            <b>@Enumerations.GetEnumDescription(item.PaymentType)</b>
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(item.Description))
                    {
                        <div class="display-flex padding-15">
                            <div class="width-20">Коментар</div>
                            <div style="max-width:250px;">
                                @Html.Raw(item.Description)
                            </div>
                        </div>
                    }
                    <div class="display-flex border-top">
                        <div style="margin-left: auto; font-size:18px;" class="padding-15">
                            Всього до сплати
                            <b style="margin-left: 200px;">@((item.Sum + item.ShippingCost).ToString("F")) грн</b>
                        </div>
                    </div>
                </div>
                <div style="width:380px;" class="border-left data-status-wrap" data-order-id="@item.Id">
                    @Html.Partial("_OrderStatusPartial", item)
                </div>
            </div>
            <br style="clear:both;display: none;" />
        </div>
    }
</div>
@*<table class="table">
        <tr>
            <th>
                Номер
            </th>
            @if (Model.Items.Any() && Model.Items.First().OrderType == OrderType.BenefitCard)
            {
                <th>
                    Номер чеку
                </th>
            }
            @if (User.IsInRole(DomainConstants.AdminRoleName))
            {
                <th>
                    Постачальник
                </th>
            }
            @if (Model.Items.Any() && Model.Items.First().OrderType == OrderType.BenefitCard)
            {
                <th>
                    Касир
                </th>
            }
            <th>
                Клієнт
            </th>
            <th>
                Сума
            </th>

            <th>
                Час створення
            </th>
            @if (Model.Items.Any() && Model.Items.First().OrderType == OrderType.BenefitSite)
            {
                <th>
                    Час завершення
                </th>
            }
            <th>
                Метод оплати
            </th>
            @if (Model.Items.Any() && Model.Items.First().OrderType == OrderType.BenefitSite)
            {
                <th>
                    Статус
                </th>
            }
        </tr>

        @foreach (var item in Model.Items)
        {
            var className = (item.OrderType == OrderType.BenefitCard && item.IsRepeating) ? "bg-pink" : "";
            <tr class="@className">
                <td>
                    <a href="#" class="fn-show-order" data-order-id="@item.Id">
                        @Html.DisplayFor(modelItem => item.OrderNumber)
                    </a>
                </td>
                @if (Model.Items.Any() && Model.Items.First().OrderType == OrderType.BenefitCard)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                }
                <td>
                    @Html.ActionLink(item.SellerName, "CreateOrUpdate", "Sellers", new { id = item.SellerId }, new { target = "_blank" })
                </td>
                @if (Model.Items.Any() && Model.Items.First().OrderType == OrderType.BenefitCard)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.PersonnelName)
                    </td>
                }
                <td>
                    @if (User.IsInRole(DomainConstants.AdminRoleName))
                    {
                        @Html.ActionLink(item.User.FullName, "Edit", "Users", new { id = item.User.Id }, new { target = "_blank" })
                    }
                    else
                    {
                        <span>@item.User.FullName</span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SumWithDiscount)
                </td>
                <td>
                    @item.Time.ToLocalDateTimeWithFormat()
                </td>
                @if (item.OrderType == OrderType.BenefitSite)
                {
                    <td>
                        @{
                            var finishedStamp = item.OrderStatusStamps.FirstOrDefault(entry => entry.OrderStatus == OrderStatus.Finished);
                            var finishedTime = finishedStamp == null ? "-" : finishedStamp.Time.ToLocalDateTimeWithFormat();
                        }
                        @finishedTime
                    </td>
                }
                <td>
                    @Enumerations.GetEnumDescription(item.PaymentType)
                </td>
                @if (item.OrderType == OrderType.BenefitSite)
                {
                    <td>
                        @Enumerations.GetEnumDescription(item.Status)
                    </td>
                }
                <td>
                    @if (item.OrderType == OrderType.BenefitSite)
                    {
                        @Html.ActionLink("Детальніше", "Details", "Orders", new { id = item.Id }, new { target = "_blank" })
                        <span>|</span>
                    }
                    @{
                        var now = DateTime.UtcNow;
                    }
                    @if (User.IsInRole(DomainConstants.SuperAdminRoleName) && item.Time.StartOfMonth().AddMonths(1).AddDays(15) > now)
                    {
                        <a href="#" id="delete-order" data-order-id="@item.Id">Видалити</a>
                    }
                </td>
            </tr>
        }
    </table>*@
@using Benefit.Common.Constants
@using Benefit.Common.Extensions
@using Benefit.Common.Helpers
@using Benefit.Domain.Models
@model  Benefit.DataTransfer.ViewModels.PaginatedList<Order>

@if (Model.Items.Any())
{
    <ul class="pagination">
        @{
    var firstStage = Model.Pages >= ListConstants.PagingFirstStage ? ListConstants.PagingFirstStage : Model.Pages;
    var lastDisplayedPage = 0;
        }
        @for (var i = 0; i < Model.Pages; i++)
        {
            if ((i >= 0 && i < firstStage) ||
                (i >= Model.ActivePage - ListConstants.PagingActivePageSiblinbgsRange && i <= Model.ActivePage + ListConstants.PagingActivePageSiblinbgsRange) ||
                (i >= Model.Pages - ListConstants.PagingFirstStage && i < Model.Pages))
            {
                <li class="@(i == Model.ActivePage ? "active" : "" )">
                    <a href="#" data-page-number="@i">@(i + 1)</a>
                </li>
                lastDisplayedPage = i;
            }
            else
            {
                if (i == lastDisplayedPage + 1)
                {
                    <li>
                        <span class="pull-left">...</span>
                    </li>
                }
            }
        }
    </ul>
}
<table class="table">
    <tr>
        <th>
            Номер
        </th>
        @if (Model.Items.Any() && Model.Items.First().OrderType == OrderType.BenefitCard)
        {
            <th>
                Номер чеку
            </th>
        }
        <th>
            Постачальник
        </th>
        @if (Model.Items.Any() && Model.Items.First().OrderType == OrderType.BenefitCard)
        {
            <th>
                Касир
            </th>
        }
        <th>
            Клієнт
        </th>
        <th>
            Сума
        </th>

        <th>
            Час створення
        </th>
        @if (Model.Items.Any() && Model.Items.First().OrderType == OrderType.BenefitSite)
        {
            <th>
                Час завершення
            </th>
        }
        <th>
            Метод оплати
        </th>
        @if (Model.Items.Any() && Model.Items.First().OrderType == OrderType.BenefitSite)
        {
            <th>
                Статус
            </th>
        }
        <th></th>
    </tr>

    @foreach (var item in Model.Items)
    {
        var className = (item.OrderType == OrderType.BenefitCard && item.IsRepeating) ? "bg-pink" : "";
        <tr class="@className">
            <td>
                @Html.DisplayFor(modelItem => item.OrderNumber)
            </td>
            @if (Model.Items.Any() && Model.Items.First().OrderType == OrderType.BenefitCard)
            {
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
            }
            <td>
                @Html.ActionLink(item.SellerName, "CreateOrUpdate", "Sellers", new { id = item.SellerId }, new { target = "_blank" })
            </td>
            @if (Model.Items.Any() && Model.Items.First().OrderType == OrderType.BenefitCard)
            {
                <td>
                    @Html.DisplayFor(modelItem => item.PersonnelName)
                </td>
            }
            <td>
                @if (User.IsInRole(DomainConstants.AdminRoleName))
                {
                    @Html.ActionLink(item.User.FullName, "Edit", "Users", new { id = item.User.Id }, new { target = "_blank" })
                }
                else
                {
                    <span>@item.User.FullName</span>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sum)
            </td>
            <td>
                @item.Time.ToLocalDateTimeWithFormat()
            </td>
            @if (item.OrderType == OrderType.BenefitSite)
            {
                <td>
                    @{
                var finishedStamp = item.OrderStatusStamps.FirstOrDefault(entry => entry.OrderStatus == OrderStatus.Finished);
                var finishedTime = finishedStamp == null ? "-" : finishedStamp.Time.ToLocalDateTimeWithFormat();
                    }
                    @finishedTime
                </td>
            }
            <td>
                @Enumerations.GetEnumDescription(item.PaymentType)
            </td>
            @if (item.OrderType == OrderType.BenefitSite)
            {
                <td>
                    @Enumerations.GetEnumDescription(item.Status)
                </td>
            }
            <td>
                @if (item.OrderType == OrderType.BenefitSite)
                {
                    @Html.ActionLink("Детальніше", "Details", "Orders", new { id = item.Id }, new { target = "_blank" })
                    <span>|</span>
                }
                @{
                    var now = DateTime.UtcNow;
                }
                @if (User.IsInRole(DomainConstants.SuperAdminRoleName) && item.Time.StartOfMonth().AddMonths(1).AddDays(15) > now)
                {
                    <a href="#" id="delete-order" data-order-id="@item.Id">Видалити</a>
                }
            </td>
        </tr>
    }
</table>
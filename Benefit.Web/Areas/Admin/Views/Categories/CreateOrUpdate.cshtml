@using System.Globalization
@using Benefit.Common.Constants
@using Benefit.Common.Extensions
@model Benefit.Domain.Models.Category

@{
    ViewBag.Title = "Категорія " + Model.Name;
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
@section styles{
    <link href="~/Areas/Admin/assets/css/chosen.min.css" rel="stylesheet" />
}
@section scripts{
    <script src="~/Areas/Admin/assets/js/chosen.jquery.min.js"></script>
    <script type="text/javascript">
        $(function () {
            $("#CategoryImage").ace_file_input({
                style: 'well',
                btn_choose: 'Drop images here or click to choose',
                btn_change: null, /* we don't need it */
                no_icon: 'icon-cloud-upload',
                droppable: true,
                thumbnail: 'large',
                before_change: function (files, dropped) {
                    var file = files[0];
                    if (typeof file == "string") {
                        //file is just a file name here (in browsers that don't support FileReader API such as IE8)
                        if (!(/\.(jpe?g|png|gif)$/i).test(file)) {
                            //not an image extension?
                            //alert user
                            return false;
                        }
                    } else {
                        var type = $.trim(file.type);
                        if (
                            (type.length > 0 && !(/^image\/(jpe?g|png|gif)$/i).test(type))
                                ||
                            //for android's default browser!
                                (type.length == 0 && !(/\.(jpe?g|png|gif)$/i).test(file.name))
                        ) {
                            //alert user
                            return false;
                        }

                        /* if (file.size > 1024 * 100) {
                             //is the file size larger than 100KB?
                             //alert user
                             return false;
                         }*/
                    }

                    return true;
                },

                before_remove: function () {
                    //if(upload_in_progress) return false;//don't allow resetting the file input while upload in progress
                    return true;
                },

                preview_error: function (filename, error_code) {
                    alert(error_code);
                    //name of the file that failed
                    //error_code values
                    //1 = 'FILE_LOAD_FAILED',
                    //2 = 'IMAGE_LOAD_FAILED',//the loaded file is not an image
                    //3 = 'THUMBNAIL_FAILED'//somehow creating the thumbnail failed.
                    //notify user?!
                }
            });

            $(".chosen-select").chosen({
                search_contains: true
            });

            /* $(".switchNavigationType").click(function () {
                 $(".switchNavigationType").removeClass("btn-primary");
                 $(this).addClass("btn-primary");
                 var navType = $(this).attr("data-navtype");
                 $("#navType").val(navType);
             });*/
        })
    </script>
}
@using (Html.BeginForm("CreateOrUpdate", "Categories", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary()
    @Html.AntiForgeryToken()

    <div class="tabbable">
        <ul class="nav nav-tabs">
            <li class="active">
                <a href="#home" data-toggle="tab">
                    <i class="blue icon-info bigger-110"></i>
                    Основна інфо
                </a>
            </li>
            <li>
                <a href="#ru" data-toggle="tab">
                    <i class="icon-country icon-ru bigger-110"></i>
                    Русский
                </a>
            </li>
            <li>
                <a href="#sellers" data-toggle="tab">
                    <i class="blue icon-list bigger-110"></i>
                    Список постачальників
                </a>
            </li>
            <li>
                <a href="#products" data-toggle="tab">
                    <i class="blue icon-list bigger-110"></i>
                    Список товарів
                </a>
            </li>
        </ul>

        <div class="tab-content">
            <div class="tab-pane in active" id="home">
                <div class="form-horizontal">
                    @* <label>Тип навігації</label>
                        <div>
                            <a data-navtype="SellersOnly" class="btn switchNavigationType @(Model.NavigationType == "SellersOnly" ? "btn-primary" : "")">Тільки постачальники</a>
                            <a data-navtype="SellersAndProducts" class="btn switchNavigationType @(Model.NavigationType == "SellersAndProducts" ? "btn-primary" : "")">Постачальники та товари</a>
                        </div>
                        <br />*@
                    @Html.HiddenFor(entry => entry.NavigationType, new { id = "navType" })

                    @Html.ValidationSummary(true)

                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.Order)

                    <br />
                    <div class="form-group">
                        <div class="col-md-1">

                            <label class="text-left control-label" for="Name">Назва</label>
                        </div>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Name, new { id = "catName", @class = "name" })
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-1">
                            <label class="text-left control-label" for="UrlName">Url назва</label>
                        </div>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.UrlName, new { id = "urlName", @class = "urlName" })
                            @Html.ValidationMessageFor(model => model.UrlName)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-1">
                            <label class="control-label text-left" for="Description">Опис</label>
                        </div>

                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Description)
                            @Html.ValidationMessageFor(model => model.Description)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-1">
                            <label class="text-left">Батьківська категорія</label>
                        </div>
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.ParentCategoryId, null, "Не обрано", new { @class = "chosen-select col-xs-10 col-sm-5" })
                            @Html.ValidationMessageFor(model => model.ParentCategoryId)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-1">
                            <label class="text-left control-label">Активна</label>
                        </div>
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.IsActive)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-1">
                            <label class="text-left control-label">Дочірні категорії як фільтри</label>
                        </div>
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.ChildAsFilters)
                        </div>
                    </div>
                    @if (@Model.Name != null)
                    {
                        <div class="form-group">
                            <label class="col-md-1 control-label text-left">Коли останній раз редагувалось</label>
                            <div class="col-md-10">
                                @Html.TextBox("LastModified", @Model.LastModified.ToLocalTimeWithFormat(), new { disabled = "true" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-1 control-label no-padding-right text-left">Ким останній раз редагувалось</label>
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.LastModifiedBy, new { disabled = "true" })
                            </div>
                        </div>
                    }
                    @*<div class="width-30">
                            <input type="file" id="CategoryImage" name="categoryImage" />
                        </div>*@
                </div>
            </div>
            <div id="ru" class="tab-pane">
                <div class="form-horizontal">
                    @for (var i = 0; i < Model.Localizations.Count; i++)
                    {
                        <div class="form-group">
                            @Html.HiddenFor(m => m.Localizations[i].Id)
                            @Html.HiddenFor(m => m.Localizations[i].LanguageCode)
                            @Html.HiddenFor(m => m.Localizations[i].ResourceField)
                            @Html.HiddenFor(m => m.Localizations[i].ResourceId)
                            @Html.HiddenFor(m => m.Localizations[i].ResourceType)
                            <label class="control-label col-md-1" for="Name">
                                @HttpContext.GetGlobalResourceObject("Resources", Model.Localizations[i].ResourceField, new CultureInfo("ru-RU"))
                            </label>
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.Localizations[i].ResourceValue)
                            </div>
                        </div>
                    }
                </div>
            </div>

            <div id="sellers" class="tab-pane">
                <ul>
                    @foreach (var seller in @Model.SellerCategories.Select(entry => entry.Seller))
                    {
                        <li>
                            @Html.ActionLink(seller.Name, "CreateOrUpdate", "Sellers", new { id = seller.Id }, new { target = "_blank" })
                        </li>
                    }
                </ul>
            </div>

            <div id="products" class="tab-pane">
                <ul>
                    @foreach (var product in @Model.Products)
                    {
                        <li>
                            @Html.ActionLink(product.Name, "CreateOrUpdate", "Products", new { id = product.Id }, new { target = "_blank" })
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="control-group">
            <input type="submit" value="Зберегти" class="btn btn-success width-20" />
            @Html.ActionLink("Cкасувати", "Index", "Categories", null, new { @class = "btn btn-danger width-20" })
        </div>
    </div>
}

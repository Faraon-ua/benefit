@using Benefit.Web.Models.Enumerations
@using Benefit.Web.Models.ViewModels
@using Benefit.Domain.Models
@using Benefit.Common.Constants
@model Benefit.Web.Models.Admin.ProductsViewModel
@{
    ViewBag.Title = "Товари";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
@section scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/hierarchy-select.min.js"></script>
    <script src="~/Areas/Admin/assets/js/chosen.jquery.min.js"></script>
    <script src="~/Areas/Admin/assets/js/jquery-ui-1.10.3.custom.min.js"></script>
    <script src="~/Scripts/bootstrap-select.js"></script>
    @*    <script src="~/Scripts/sorting-filtering.js"></script>*@

<script>
        var updateWeightProductUrl = '@Url.Action("UpdateWeightProduct")';
        var moderateProductUrl = '@Url.Action("Moderate")';
        var bulkProductsActionUrl = '@Url.Action("BulkProductsAction")';
        var saveSortingUrl = '@Url.Action("SaveSorting")';
        var removeExportUrl = '@Url.Action("RemoveFromExport")';
        var cloneUrl = '@Url.Action("Clone")';
        var hSelect;

        $(function () {
            $(".fn-clone").click(function () {
                var btn = $(this);
                var id = btn.attr("data-product-id");
                $.get(cloneUrl + '?id=' + id, function (data) {
                    btn.parents("tr").eq(0).after(data);
                })
            });

            $('body').on("change","#products-table tbody .product-select", function () {
                if (this.checked) {
                    $(this).parent().parent().addClass("selected");
                }
                else {
                    $(this).parent().parent().removeClass("selected");
                }
            });

            $("#products-table tbody").sortable({
                //scroll: true,
                //scrollSensitivity: 100,
                //scrollSpeed: 100,
                update: function (event, ui) {
                    $("#save-sorting").show();
                },
                helper: function (e, item) {
                    if (!item.hasClass('selected')) {
                        return;
                    }
                    var elements = item.parent().children('.selected').clone();
                    item.data('multidrag', elements).siblings('.selected').remove();
                    var helper = $('<tr/>');
                    return helper.append(elements);
                },
                stop: function (e, ui) {
                    var elements = ui.item.data('multidrag');
                    ui.item.after(elements).remove();
                },
                cancel: 'td:not(.drag)'
            });

            $("#save-sorting").click(function () {
                var btn = $(this);
                var sortedProducts = $("#products-table tbody tr").map(function () {
                    var productId = $(this).attr("data-product-id");
                    return productId;
                }).get();
                $.post(saveSortingUrl, {
                    sortedProducts: sortedProducts
                }, function() {
                    btn.hide();
                    $("html, body").animate({ scrollTop: 0 }, "fast");
                    flashMessage("Сортування товарів збережено");
                });
            });

            $("body").on("click", ".moderate", function (e) {
                e.preventDefault();
                var btn = $(this);
                var id = $(this).attr("data-product-id");
                var accept = $(this).attr("data-moderation") === "true";
                if (!accept) {
                    var comment = prompt("Вкажіть причину відхилення");
                }
                var model = {
                    "id": id,
                    "accept": accept,
                    "comment": comment
                };
                $.ajax({
                    type: "POST",
                    url: moderateProductUrl,
                    data: JSON.stringify(model),
                    contentType: "application/json; charset=UTF-8",
                    success: function (response, status, xhr) {
                        if (xhr.status == 200) {
                            var icon = btn.children("i");
                            icon.addClass("opacity07");
                            icon.removeClass("font-bigger");
                            icon.removeClass("moderate");
                            btn.parent().html(icon);
                        }
                    }
                });
            });

            $(".remove-export").click(function () {
                var removeBtn = $(this);
                var productId = $(this).attr("data-product-id");
                $.post(removeExportUrl,
                    { "id": productId },
                    function () {
                        removeBtn.parents("td").html("");
                        flashMessage("Товар видалено із експорту");
                    });
            })

            $("#products-bulk-action").change(function () {
                if ($(this).val() == "@((int)ProductsBulkAction.SetCategory)") {
                    $("#move-to-categoryId").show();
                } else {
                    $("#move-to-categoryId").hide();
                }
                if ($(this).val() == "@((int)ProductsBulkAction.SetAvailability)" ||
                    $(this).val() == "@((int)ProductsBulkAction.SetAvailabilityAll)") {
                    $("#availabilityId").show();
                } else {
                    $("#availabilityId").hide();
                }
                if ($(this).val() == "@((int)ProductsBulkAction.ExportAll)" ||
                    $(this).val() == "@((int)ProductsBulkAction.ExportSelected)") {
                    $("#exportId").parent().show();
                } else {
                    $("#exportId").parent().hide();
                }
                if ($(this).val() == "@((int)ProductsBulkAction.AssignModerator)" ||
                    $(this).val() == "@((int)ProductsBulkAction.AssignModeratorAll)") {
                    $("#moderatorId").show();
                    $("#moderator-hint").show();
                } else {
                    $("#moderatorId").hide();
                    $("#moderator-hint").hide();
                }
                if ($(this).val() == "@((int)ProductsBulkAction.ApplyCurrency)" ||
                    $(this).val() == "@((int)ProductsBulkAction.ApplyCurrencyAll)") {
                    $("#currencyId").show();
                } else {
                    $("#currencyId").hide();
                }
                 if ($(this).val() == "@((int)ProductsBulkAction.Moderate)" ||
                    $(this).val() == "@((int)ProductsBulkAction.ModerateAll)") {
                    $("#moderateStatus").show();
                } else {
                    $("#moderateStatus").hide();
                }
            });

            $("#products-bulk-action-btn").click(function() {
                var productIds = $(".product-select:checked").map(function () {
                    return $(this).attr("data-product-id");
                }).get();
                var action = $("#products-bulk-action").val();
                var categoryId = $("[name=move-to-categoryId]").val();
                var availabilityId = $("[name=availabilityId]").val();
                var exportId = $("[name=exportId]").val();
                var currencyId = $("[name=currencyId]").val();
                var moderateStatus = $("[name=moderateStatus]").val();
                var moderatorId = $("[name=moderatorId]").val();
                $.post(bulkProductsActionUrl + location.search,
                    {
                        "productIds": productIds,
                        "action": action,
                        "category_Id": categoryId,
                        "availability_Id": availabilityId,
                        "export_Id": exportId,
                        "currency_Id": currencyId,
                        "moderator_Id": moderatorId,
                        "moderate_status": moderateStatus
                    }, function() {
                        window.location.reload();
                    });
            });

            $("#exportId").selectpicker();
            $("#exportId").parent().hide();

            $(".chosen-select").chosen({
                search_contains: true
            });

            $('.hierarchy-select').hierarchySelect({
                width: 170
            });

            $(".pagination a").click(function () {
                $("#Page").val($(this).text());
                $("form").submit();
            });

            $("button[type=submit]").click(function () {
                $("#Page").val(1);
            });

            $("body").on("click", ".weight-product", function () {
                var product = $(this);
                product.attr("disabled", true);
                var id = product.attr("data-product-id");
                var checked = this.checked;
                $.post(updateWeightProductUrl,
                {
                    id: id,
                    isWeight: checked
                }, function () {
                    product.removeAttr("disabled");
                });
            });

            $("#select-all").click(function() {
                $(".product-select").click();
            });
        });

        function LockUnlock(id) {
            $.post(routePrefix + "/Admin/Products/LockUnlock?id=" + id,
                function (data) {
                    flashMessage("Статус товару змінено");
                    $(".lockUser-" + id).removeClass("icon-lock");
                    $(".lockUser-" + id).removeClass("icon-unlock");
                    if (data) {
                        $(".lockUser-" + id).addClass("icon-unlock");
                    } else {
                        $(".lockUser-" + id).addClass("icon-lock");
                    }
                });
        }

        function DeleteProduct(id, name) {
            if (confirm("Видалити товар " + name + "?")) {
                $.post(routePrefix + "/Admin/Products/Delete?id=" + id,
                    function (data) {
                        if (data) {
                            flashMessage("Товар видалено");
                            $("#tr-" + id).remove();
                        }
                    });
            }
        }
</script>
}

@section styles{
    <link href="~/Areas/Admin/assets/css/chosen.css" rel="stylesheet" />
    <link href="~/Content/css/pygments.css" rel="stylesheet" />
    <link href="~/Content/css/hierarchy-select.min.css" rel="stylesheet" />
    <link href="~/Content/css/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Content/css/bootstrap-select.css" rel="stylesheet" />
    <style>
        #select-all {
            cursor: pointer;
            border-bottom: 1px dotted #4D4D4D;
            font-weight: normal;
            font-style: normal;
            color: #4D4D4D;
            text-decoration: none;
        }

        .chosen-drop {
            width: 400px !important;
        }
    </style>
}

@using (Html.BeginForm("Index", "Products", FormMethod.Get))
{
    <div class="col-sm-2 border-right page-content no-padding-left">
        @if (User.IsInRole(DomainConstants.SellerOperatorRoleName) || User.IsInRole(DomainConstants.ProductsModeratorRoleName))
        {
            @Html.Partial("_ModeratorFilters", Model.ProductFilters)
        }
        else
        {
            <div>
                @Html.ActionLink("Створити товар", "CreateOrUpdate", "Products", null, new { @class = "btn btn-info" })
            </div>
            <br />
            @Html.Partial("_Filters", Model.ProductFilters)
        }

    </div>
    <div class="col-sm-10">
        @if (!(User.IsInRole(DomainConstants.SellerOperatorRoleName) || User.IsInRole(DomainConstants.ProductsModeratorRoleName)))
        {
            <div class="row right">
                <div class="col-xs-12 col-sm-8">
                    <div class="input-group">
                        <input name="search" id="searchText" type="text" placeholder="Введіть назву або код товару" class="form-control search-query" value="@Model.ProductFilters.Search">
                        <span class="input-group-btn">
                            <button class="btn btn-purple btn-sm" type="submit">
                                Пошук
                                <i class="icon-search icon-on-right bigger-110"></i>
                            </button>
                        </span>
                    </div>
                </div>
            </div>
            <br />
        }

        <div id="searchResults">
            <div class="row alert alert-block alert-info" style="position:sticky; top:-1px;">
                <div class="col-sm-6">
                    <button type="button" class="btn btn-success" id="save-sorting" style="display:none;">Зберегти сортування</button>
                </div>
                <div class="col-sm-2">
                    <div class="text-right">
                        Показати
                        <select name="Take" id="Take" data-val-required="The Take field is required." data-val="true">
                            <option value="16" @(Model.ProductFilters.Take == 16 ? "selected='true'" : "")>16</option>
                            <option value="32" @(Model.ProductFilters.Take == 32 ? "selected='true'" : "")>32</option>
                            <option value="64" @(Model.ProductFilters.Take == 64 ? "selected='true'" : "")>64</option>
                            <option value="128" @(Model.ProductFilters.Take == 128 ? "selected='true'" : "")>128</option>
                            <option value="256" @(Model.ProductFilters.Take == 256 ? "selected='true'" : "")>256</option>
                        </select>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="text-right">
                        Сортувати за
                        <select name="Sorting" id="Sorting" data-val-required="The Sorting field is required." data-val="true">
                            <option value="">Не обрано</option>
                            @foreach (var option in Model.ProductFilters.Sorting)
                            {
                                <option value="@option.Value" @(option.Selected ? "selected='true'" : "")>@Html.Raw(option.Text)</option>
                            }
                        </select>
                    </div>
                </div>
            </div>

            @Html.Partial("_ProductsSearch", Model.Products)
            @if (Model.Products.Any() && !(User.IsInRole(DomainConstants.SellerOperatorRoleName) || User.IsInRole(DomainConstants.ProductsModeratorRoleName)))
            {
                <fieldset>
                    <legend>Групові дії</legend>
                    <div class="display-flex" style="justify-content: space-between;">
                        <div>
                            <label id="select-all">Обрати всі</label>
                        </div>
                        <div>
                            Дія:
                            @Html.DropDownList("products-bulk-action", EnumHelper.GetSelectList(typeof(ProductsBulkAction)))
                        </div>
                        <div>
                            <div class="padding-left-19">
                                @Html.Partial("_HierarchySelect", new HierarchySelectViewModel
                                {
                                    Name = "move-to-categoryId",
                                    Value = null,
                                    Items = Model.ProductFilters.Categories
                                })
                               
                                @Html.ListBox("exportId", Model.ProductFilters.Exports, new { id = "exportId", style = "display:none;" })

                                @Html.DropDownList("currencyId", Model.ProductFilters.Currencies, null, new { id = "currencyId", style = "display:none;" })

                                @Html.DropDownList("moderateStatus", EnumHelper.GetSelectList(typeof(ModerationStatus)), new { id = "moderateStatus", style = "display: none;" })

                                @Html.DropDownList("availabilityId", EnumHelper.GetSelectList(typeof(ProductAvailabilityState)), new { id = "availabilityId", style = "display: none;" })

                                <span id="moderator-hint" style="display:none;">* оберіть постачальника * </span>
                                @if (Model.ProductFilters.Moderators != null)
                                {
                                    @Html.DropDownList("moderatorId", Model.ProductFilters.Moderators, null, new { id = "moderatorId", style = "display:none;" })
                                }
                            </div>
                        </div>
                        <button class="btn btn-success pull-right height-40px" id="products-bulk-action-btn">Застосувати</button>
                    </div>
                </fieldset>
            }
            @if (Model.Products.Any())
            {
                <div class="page-header">
                    <h2 class="no-padding-bottom pull-left">Товарів знайдено:</h2>
                    <h2 class="orange">@Model.TotalProductsCount</h2>
                </div>
            }

            @Html.Hidden("Page", 1)
            <div class="table-responsive">

                @if (Model.ProductFilters.PagesCount > 0)
                {
                    <ul class="pagination">
                        @for (var i = 0; i < Model.ProductFilters.PagesCount; i++)
                        {
                            var className = Request.QueryString["Page"] == (i + 1).ToString() ? "active" : "";
                            <li class="@className">
                                <a href="#">@(i + 1)</a>
                            </li>
                        }
                    </ul>
                }
            </div>
        </div>
    </div>
}